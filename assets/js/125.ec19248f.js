(window.webpackJsonp=window.webpackJsonp||[]).push([[125],{700:function(e,t,s){"use strict";s.r(t);var a=s(5),i=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"l15-trie-prefix-tree-字典树-前缀树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#l15-trie-prefix-tree-字典树-前缀树"}},[e._v("#")]),e._v(" L15 Trie(prefix tree) 字典树(前缀树)")]),e._v(" "),s("p",[e._v("Trie supports "),s("strong",[e._v("search, insert and delete")]),e._v(" operations in "),s("strong",[e._v("O(L)")]),e._v(" time where "),s("strong",[e._v("L")]),e._v(" is the length of the key.")]),e._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"/images/image-20210705210355151.png",alt:"image-20210705210355151"}}),e._v(" "),s("h4",{attrs:{id:"优点-比较于bst-hash"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优点-比较于bst-hash"}},[e._v("#")]),e._v(" 优点（比较于BST,Hash）:")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("With Trie, we can insert and find strings in "),s("strong",[e._v("O(L)")]),e._v(" time where "),s("em",[e._v("L")]),e._v(" represent the length of a single word. This is\nobviously faster than BST. This is also faster than Hashing because of the ways it is implemented. We do not need to\ncompute any hash function. No collision handling is required (like we do in open addressing and separate chaining)")])]),e._v(" "),s("li",[s("p",[e._v("Another advantage of Trie is, we can easily print all words in alphabetical order which is not easily possible with\nhashing.")])]),e._v(" "),s("li",[s("p",[e._v("We can efficiently do prefix search (or auto-complete) with Trie.")])])]),e._v(" "),s("h4",{attrs:{id:"缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[e._v("#")]),e._v(" "),s("strong",[e._v("缺点")])]),e._v(" "),s("ul",[s("li",[e._v("The main disadvantage of tries is that they need a lot of memory for storing the strings.")])]),e._v(" "),s("h4",{attrs:{id:"inserting-elements"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inserting-elements"}},[e._v("#")]),e._v(" Inserting Elements")]),e._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"/images/image-20210705211340843.png",alt:"image-20210705211340843"}}),e._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"/images/image-20210705211350209.png",alt:"image-20210705211350209"}}),e._v(" "),s("h4",{attrs:{id:"deleting-an-element"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deleting-an-element"}},[e._v("#")]),e._v(" Deleting an Element")]),e._v(" "),s("p",[s("strong",[e._v("1. Word is prefix of other words.")]),e._v(" 是其他词前缀")]),e._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"/images/image-20210705211515249.png",alt:"image-20210705211515249"}}),e._v(" "),s("p",[s("strong",[e._v("2. Word has prefix of other words.")]),e._v(" 有其他词的前缀")]),e._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"/images/image-20210705211608182.png",alt:"image-20210705211608182"}}),e._v(" "),s("p",[s("strong",[e._v("3. Word is unique.")]),e._v(" 独立的")]),e._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"/images/image-20210705211709006.png",alt:"image-20210705211709006"}})])}),[],!1,null,null,null);t.default=i.exports}}]);