(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{638:function(t,s,n){"use strict";n.r(s);var a=n(5),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("blockquote",[n("p",[t._v("作者：SimonMa\n链接：https://juejin.cn/post/6844903520441729037")])]),t._v(" "),n("h2",{attrs:{id:"变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),n("p",[n("strong",[t._v("值变量")])]),t._v(" "),n("div",{staticClass:"language-CSS extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Less */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #999"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@bgColor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" skyblue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("//不要添加引号\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50%"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#wrap")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@bgColor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 生成后的 CSS */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#wrap")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #999"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" skyblue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50%"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("以 "),n("code",[t._v("@")]),t._v(" 开头 定义变量，并且使用时 直接 键入 "),n("code",[t._v("@")]),t._v("名称。")]),t._v(" "),n("p",[t._v("在平时工作中，我们就可以把 常用的变量 封装到一个文件中，这样利于代码组织维护。")]),t._v(" "),n("div",{staticClass:"language-CSS extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@lightPrimaryColor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #c5cae9"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@textPrimaryColor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #fff"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@accentColor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rgb")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("99"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 137"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 185"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@primaryTextColor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #646464"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@secondaryTextColor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #000"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@dividerColor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #b6b6b6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@borderColor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #dadada"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n")])])]),n("p",[n("strong",[t._v("选择器变量")])]),t._v(" "),n("p",[t._v("让 选择器 变成 动态")]),t._v(" "),n("div",{staticClass:"language-CSS extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Less */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@mySelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #wrap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@Wrap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wrap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("@")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("mySelector"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" //变量名 必须使用大括号包裹\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #999"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50%"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".@")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Wrap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("#ccc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#@")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Wrap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("#666"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 生成的 CSS */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#wrap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #999"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50%"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".wrap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("#ccc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#wrap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("#666"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("strong",[t._v("属性变量")])]),t._v(" "),n("p",[t._v("可减少代码书写量")]),t._v(" "),n("div",{staticClass:"language-CSS extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Less */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@borderStyle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" border-style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@Soild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("solid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#wrap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("@")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("borderStyle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@Soild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("//变量名 必须使用大括号包裹\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 生成的 CSS */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#wrap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-style")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("solid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("strong",[t._v("url 变量")])]),t._v(" "),n("p",[t._v("项目结构改变时，修改其变量即可。")]),t._v(" "),n("div",{staticClass:"language-CSS extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Less */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@images")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"../img"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("//需要加引号\nbody")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token url"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string url"}},[t._v('"@{images}/dog.png"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("//变量名 必须使用大括号包裹\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 生成的 CSS */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("body")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token url"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string url"}},[t._v('"../img/dog.png"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n复制代码\n")])])]),n("p",[n("strong",[t._v("声明变量")])]),t._v(" "),n("p",[t._v("有点类似于 下面的 混合方法")]),t._v(" "),n("ul",[n("li",[t._v("结构: @name: { 属性: 值 ;};")]),t._v(" "),n("li",[t._v("使用：@name();")])]),t._v(" "),n("div",{staticClass:"language-CSS extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Less */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@background")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("red"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v(";\n#main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@background")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@Rules")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" solid 1px red"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v(";\n#con")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@Rules")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 生成的 CSS */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("red"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#con")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" solid 1px red"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n复制代码\n")])])]),n("p",[n("strong",[t._v("变量运算")])]),t._v(" "),n("p",[t._v("不得不提的是，Less 的变量运算完全超出我的期望，十分强大。")]),t._v(" "),n("ul",[n("li",[t._v("加减法时 以第一个数据的单位为基准")]),t._v(" "),n("li",[t._v("乘除法时 注意单位一定要统一")])]),t._v(" "),n("div",{staticClass:"language-CSS extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Less */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("300px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("#222"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#wrap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@width-20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@width-20")]),t._v("*5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@width-20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("*5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@color")]),t._v("*2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@color")]),t._v(" + #111"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 生成的 CSS */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#wrap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("280px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("200px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1400px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("#444"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("#333"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("strong",[t._v("变量作用域")])]),t._v(" "),n("p",[t._v("一句话理解就是："),n("strong",[t._v("就近原则")]),t._v("，不要跟我提闭包。")]),t._v(" "),n("p",[n("em",[t._v("借助官网的Demo")])]),t._v(" "),n("div",{staticClass:"language-CSS extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Less */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@var")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#wrap")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@var")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 9%"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 生成的 CSS */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#wrap")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 9%"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("strong",[t._v("用变量去定义变量")])]),t._v(" "),n("div",{staticClass:"language-CSS extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Less */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@fnord")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I am fnord."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@var")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fnord"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#wrap::after")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" @"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@var")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v(" //将"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@var")]),t._v("替换为其值 "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@fnord")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 生成的 CSS */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#wrap::after")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I am fnord."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"嵌套"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#嵌套"}},[t._v("#")]),t._v(" 嵌套")]),t._v(" "),n("p",[n("strong",[t._v("& 的妙用")])]),t._v(" "),n("p",[t._v("& ：代表的上一层选择器的名字，此例便是"),n("code",[t._v("header")]),t._v("。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('/* Less */\n#header{\n  &:after{\n    content:"Less is more!";\n  }\n  .title{\n    font-weight:bold;\n  }\n  &_content{//理解方式：直接把 & 替换成 #header\n    margin:20px;\n  }\n}\n/* 生成的 CSS */\n#header::after{\n  content:"Less is more!";\n}\n#header .title{ //嵌套了\n  font-weight:bold;\n}\n#header_content{//没有嵌套！\n    margin:20px;\n}\n复制代码\n')])])]),n("p",[n("strong",[t._v("媒体查询")])]),t._v(" "),n("p",[t._v("在以往的工作中，我们使用 媒体查询，都要把一个元素 分开写")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("#wrap{\n  width:500px;\n}\n@media screen and (max-width:768px){\n  #wrap{\n    width:100px;\n  }\n}\n复制代码\n")])])]),n("p",[t._v("Less 提供了一个十分便捷的方式")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* Less */\n#main{\n    //something...\n\n    @media screen{\n        @media (max-width:768px){\n          width:100px;\n        }\n    }\n    @media tv {\n      width:2000px;\n    }\n}\n/* 生成的 CSS */\n@media screen and (maxwidth:768px){\n  #main{\n      width:100px; \n  }\n}\n@media tv{\n  #main{\n    width:2000px;\n  }\n}\n复制代码\n")])])]),n("p",[t._v("唯一的缺点就是 每一个元素都会编译出自己 "),n("code",[t._v("@media")]),t._v(" 声明，并不会合并。")]),t._v(" "),n("p",[n("strong",[t._v("实战技巧")])]),t._v(" "),n("p",[t._v("可以借助 Less 在元素中，去定义自己的私有样式。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('/* Less */\n#main{\n  // something..\n  &.show{\n    display:block;\n  }\n}\n.show{\n  display:none;\n}\n复制代码\nconst main = document.getElementById("main");\nmain.classList.add("show");\n复制代码\n')])])]),n("p",[t._v("结果：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("#main.show{\n  display:block;\n}\n.show{\n  display:none; //会被覆盖。\n}\n")])])]),n("h2",{attrs:{id:"混合方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#混合方法"}},[t._v("#")]),t._v(" 混合方法")]),t._v(" "),n("ol",[n("li",[n("p",[n("strong",[t._v("无参数方法")])]),t._v(" "),n("p",[t._v("方法犹如 声明的集合，使用时 直接键入名称即可。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* Less */\n.card { // 等价于 .card()\n    background: #f6f6f6;\n    -webkit-box-shadow: 0 1px 2px rgba(151, 151, 151, .58);\n    box-shadow: 0 1px 2px rgba(151, 151, 151, .58);\n}\n#wrap{\n  .card;//等价于.card();\n}\n/* 生成的 CSS */\n#wrap{\n  background: #f6f6f6;\n  -webkit-box-shadow: 0 1px 2px rgba(151, 151, 151, .58);\n  box-shadow: 0 1px 2px rgba(151, 151, 151, .58);\n}\n复制代码\n")])])]),n("p",[t._v("其中 "),n("code",[t._v(".card")]),t._v(" 与 "),n("code",[t._v(".card()")]),t._v(" 是等价的。 个人建议，为了避免 代码混淆，应写成 :")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(".card(){\n  //something...\n}\n#wrap{\n  .card();\n}\n复制代码\n")])])]),n("p",[t._v("要点：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v(".")]),t._v(" 与 "),n("code",[t._v("#")]),t._v(" 皆可作为 方法前缀。")]),t._v(" "),n("li",[t._v("方法后写不写 "),n("code",[t._v("()")]),t._v(" 看个人习惯。")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("默认参数方法")])]),t._v(" "),n("ul",[n("li",[t._v("Less 可以使用默认参数，如果 没有传参数，那么将使用默认参数。")]),t._v(" "),n("li",[n("code",[t._v("@arguments")]),t._v(" 犹如 JS 中的 "),n("code",[t._v("arguments")]),t._v(" 指代的是 全部参数。")]),t._v(" "),n("li",[t._v("传的参数中 必须带着单位。")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* Less */\n.border(@a:10px,@b:50px,@c:30px,@color:#000){\n    border:solid 1px @color;\n    box-shadow: @arguments;//指代的是 全部参数\n}\n#main{\n    .border(0px,5px,30px,red);//必须带着单位\n}\n#wrap{\n    .border(0px);\n}\n#content{\n  .border;//等价于 .border()\n}\n\n/* 生成的 CSS */\n#main{\n    border:solid 1px red;\n    box-shadow:0px,5px,30px,red;\n}\n#wrap{\n    border:solid 1px #000;\n    box-shadow: 0px 50px 30px #000;\n}\n#content{\n    border:solid 1px #000;\n    box-shadow: 10px 50px 30px #000;\n}\n\n复制代码\n")])])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("方法的匹配模式")])]),t._v(" "),n("p",[t._v("与 面向对象中的多态 很相似")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* Less */\n.triangle(top,@width:20px,@color:#000){\n    border-color:transparent  transparent @color transparent ;\n}\n.triangle(right,@width:20px,@color:#000){\n    border-color:transparent @color transparent  transparent ;\n}\n\n.triangle(bottom,@width:20px,@color:#000){\n    border-color:@color transparent  transparent  transparent ;\n}\n.triangle(left,@width:20px,@color:#000){\n    border-color:transparent  transparent  transparent @color;\n}\n.triangle(@_,@width:20px,@color:#000){\n    border-style: solid;\n    border-width: @width;\n}\n#main{\n    .triangle(left, 50px, #999)\n}\n/* 生成的 CSS */\n#main{\n  border-color:transparent  transparent  transparent #999;\n  border-style: solid;\n  border-width: 50px;\n}\n复制代码\n")])])]),n("p",[t._v("要点")]),t._v(" "),n("ul",[n("li",[t._v("第一个参数 "),n("code",[t._v("left")]),t._v(" 要会找到方法中匹配程度最高的，如果匹配程度相同，将全部选择，并存在着样式覆盖替换。")]),t._v(" "),n("li",[t._v("如果匹配的参数 是变量，则将会匹配，如 "),n("code",[t._v("@_")]),t._v(" 。")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("方法的命名空间")])]),t._v(" "),n("p",[t._v("让方法更加规范")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* Less */\n#card(){\n    background: #723232;\n    .d(@w:300px){\n        width: @w;\n        \n        #a(@h:300px){\n            height: @h;//可以使用上一层传进来的方法\n        }\n    }\n}\n#wrap{\n    #card > .d > #a(100px); // 父元素不能加 括号\n}\n#main{\n    #card .d();\n}\n#con{\n    //不得单独使用命名空间的方法\n    //.d() 如果前面没有引入命名空间 #card ，将会报错\n    \n    #card; // 等价于 #card();\n    .d(20px); //必须先引入 #card\n}\n/* 生成的 CSS */\n#wrap{\n  height:100px;\n}\n#main{\n  width:300px;\n}\n#con{\n  width:20px;\n}\n\n复制代码\n")])])]),n("p",[t._v("要点")]),t._v(" "),n("ul",[n("li",[t._v("在 CSS 中"),n("code",[t._v(">")]),t._v(" 选择器，选择的是 儿子元素，就是 必须与父元素 有直接血源的元素。")]),t._v(" "),n("li",[t._v("在引入命令空间时，如使用 "),n("code",[t._v(">")]),t._v(" 选择器，父元素不能加 括号。")]),t._v(" "),n("li",[t._v("不得单独使用命名空间的方法 必须先引入命名空间，才能使用 其中方法。")]),t._v(" "),n("li",[t._v("子方法 可以使用上一层传进来的方法")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("方法的条件筛选")])]),t._v(" "),n("p",[t._v("Less 没有 if else，可是它有 "),n("code",[t._v("when")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* Less */\n#card{\n    \n    // and 运算符 ，相当于 与运算 &&，必须条件全部符合才会执行\n    .border(@width,@color,@style) when (@width>100px) and(@color=#999){\n        border:@style @color @width;\n    }\n\n    // not 运算符，相当于 非运算 !，条件为 不符合才会执行\n    .background(@color) when not (@color>=#222){\n        background:@color;\n    }\n\n    // , 逗号分隔符：相当于 或运算 ||，只要有一个符合条件就会执行\n    .font(@size:20px) when (@size>50px) , (@size<100px){\n        font-size: @size;\n    }\n}\n#main{\n    #card>.border(200px,#999,solid);\n    #card .background(#111);\n    #card > .font(40px);\n}\n/* 生成后的 CSS */\n#main{\n  border:solid #999 200px;\n  background:#111;\n  font-size:40px;\n}\n复制代码\n")])])]),n("p",[t._v("要点")]),t._v(" "),n("ul",[n("li",[t._v("比较运算有： > >= = =< <。")]),t._v(" "),n("li",[t._v("= 代表的是等于")]),t._v(" "),n("li",[t._v("除去关键字 true 以外的值都被视为 false：")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("数量不定的参数")])]),t._v(" "),n("p",[t._v("如果你希望你的方法接受数量不定的参数，你可以使用... ，犹如 ES6 的扩展运算符。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* Less */\n.boxShadow(...){\n    box-shadow: @arguments;\n}\n.textShadow(@a,...){\n    text-shadow: @arguments;\n}\n#main{\n    .boxShadow(1px,4px,30px,red);\n    .textShadow(1px,4px,30px,red);\n}\n\n/* 生成后的 CSS */\n#main{\n  box-shadow: 1px 4px 30px red;\n  text-shadow: 1px 4px 30px red;\n}\n复制代码\n")])])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("方法使用important！")])]),t._v(" "),n("p",[t._v("使用方法 非常简单，在方法名后 加上关键字即可。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* Less */\n.border{\n    border: solid 1px red;\n    margin: 50px;\n}\n#main{\n    .border() !important;\n}\n/* 生成后的 CSS */\n#main {\n    border: solid 1px red !important;\n    margin: 50px !important;\n}\n复制代码\n")])])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("循环方法")])]),t._v(" "),n("p",[t._v("Less 并没有提供 for 循环功能，但这也难不倒 聪明的程序员，使用递归去实现。 下面是官网中的一个 Demo，模拟了生成栅格系统。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* Less */\n.generate-columns(4);\n\n.generate-columns(@n, @i: 1) when (@i =< @n) {\n  .column-@{i} {\n    width: (@i * 100% / @n);\n  }\n  .generate-columns(@n, (@i + 1));\n}\n/* 生成后的 CSS */\n.column-1 {\n  width: 25%;\n}\n.column-2 {\n  width: 50%;\n}\n.column-3 {\n  width: 75%;\n}\n.column-4 {\n  width: 100%;\n}\n复制代码\n")])])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("属性拼接方法")])]),t._v(" "),n("p",[n("code",[t._v("+_")]),t._v(" 代表的是 空格；"),n("code",[t._v("+")]),t._v(" 代表的是 逗号。")]),t._v(" "),n("ul",[n("li",[t._v("逗号")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* Less */\n.boxShadow() {\n    box-shadow+: inset 0 0 10px #555;\n}\n.main {\n  .boxShadow();\n  box-shadow+: 0 0 20px black;\n}\n/* 生成后的 CSS */\n.main {\n  box-shadow: inset 0 0 10px #555, 0 0 20px black;\n}\n复制代码\n")])])]),n("ul",[n("li",[t._v("空格")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* Less */\n.Animation() {\n  transform+_: scale(2);\n}\n.main {\n  .Animation();\n  transform+_: rotate(15deg);\n}\n\n/* 生成的 CSS */\n.main {\n  transform: scale(2) rotate(15deg);\n}\n复制代码\n")])])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("实战技巧")])]),t._v(" "),n("p",[t._v("下面是官网中的一个非常赞的 Demo")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* Less */\n.average(@x, @y) {\n  @average: ((@x + @y) / 2);\n}\n\ndiv {\n  .average(16px, 50px); // 调用 方法\n  padding: @average;    // 使用返回值\n}\n\n/* 生成的 CSS */\ndiv {\n  padding: 33px;\n}\n复制代码\n")])])])])]),t._v(" "),n("p",[t._v("可以说 Less 是一门优雅编程语言。")]),t._v(" "),n("h2",{attrs:{id:"继承"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#继承"}},[t._v("#")]),t._v(" 继承")]),t._v(" "),n("p",[t._v("extend 是 Less 的一个伪类。它可继承 所匹配声明中的全部样式。")]),t._v(" "),n("ol",[n("li",[n("p",[n("strong",[t._v("extend 关键字的使用")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* Less */\n.animation{\n    transition: all .3s ease-out;\n    .hide{\n      transform:scale(0);\n    }\n}\n#main{\n    &:extend(.animation);\n}\n#con{\n    &:extend(.animation .hide);\n}\n\n/* 生成后的 CSS */\n.animation,#main{\n  transition: all .3s ease-out;\n}\n.animation .hide , #con{\n    transform:scale(0);\n}\n复制代码\n")])])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("all 全局搜索替换")])]),t._v(" "),n("p",[t._v("使用选择器匹配到的 全部声明。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('/* Less */\n#main{\n  width: 200px;\n}\n#main {\n  &:after {\n    content:"Less is good!";\n  }\n}\n#wrap:extend(#main all) {}\n\n/* 生成的 CSS */\n#main,#wrap{\n  width: 200px;\n}\n#main:after, #wrap:after {\n    content: "Less is good!";\n}\n复制代码\n')])])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("减少代码的重复性")])]),t._v(" "),n("p",[t._v("从表面 看来，extend 与 方法 最大的差别，就是 extend 是同个选择器共用同一个声明，而 方法 是使用自己的声明，这无疑 增加了代码的重复性。")]),t._v(" "),n("p",[t._v("方法示例 与上面的 extend 进行对比：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('/* Less */\n.Method{\n  width: 200px;\n  &:after {\n      content:"Less is good!";\n  }\n}\n#main{\n  .Method;\n}\n#wrap{\n  .Method;\n}\n\n/* 生成的 CSS */\n#main{\n  width: 200px;\n  &:after{\n    content:"Less is good!";\n  }  \n}\n#wrap{\n  width: 200px;\n  &:after{\n    content:"Less is good!";\n  }  \n}\n\n复制代码\n')])])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("要点")])]),t._v(" "),n("p",[n("em",[t._v("翻译官网")])]),t._v(" "),n("ul",[n("li",[t._v("选择器和扩展之间 是允许有空格的：pre:hover :extend(div pre).")]),t._v(" "),n("li",[t._v("可以有多个扩展: pre:hover:extend(div pre):extend(.bucket tr) - 注意这与 pre:hover:extend(div pre, .bucket tr)一样。")]),t._v(" "),n("li",[t._v("这是不可以的，扩展必须在最后 : pre:hover:extend(div pre).nth-child(odd)。")]),t._v(" "),n("li",[t._v("如果一个规则集包含多个选择器，所有选择器都可以使用extend关键字。")])]),t._v(" "),n("h3",{attrs:{id:"导入"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#导入"}},[t._v("#")]),t._v(" 导入")]),t._v(" "),n("ol",[n("li",[t._v("导入 less 文件 可省略后缀")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('import "main"; \n//等价于\nimport "main.less";\n复制代码\n')])])]),n("ol",[n("li",[n("code",[t._v("@import")]),t._v(" 的位置可随意放置")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('#main{\n  font-size:15px;\n}\n@import "style";\n复制代码\n')])])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("reference")])]),t._v(" "),n("p",[t._v("Less 中 最强大的特性 使用 引入的 Less 文件，但不会 编译它。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('/* Less */\n@import (reference) "bootstrap.less"; \n\n#wrap:extend(.navbar all){}\n复制代码\n')])])]),n("p",[t._v("翻译官网：")]),t._v(" "),n("blockquote",[n("p",[t._v("使用@import (reference)导入外部文件，但不会添加 把导入的文件 编译到最终输出中，只引用。")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("once")])]),t._v(" "),n("blockquote",[n("p",[t._v("@import语句的默认行为。这表明相同的文件只会被导入一次，而随后的导入文件的重复代码都不会解析。")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('@import (once) "foo.less";\n@import (once) "foo.less"; // this statement will be ignored\n复制代码\n')])])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("multiple")])]),t._v(" "),n("blockquote",[n("p",[t._v("使用@import (multiple)允许导入多个同名文件。")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('/* Less */\n\n// file: foo.less\n.a {\n  color: green;\n}\n// file: main.less\n@import (multiple) "foo.less";\n@import (multiple) "foo.less";\n\n/* 生成后的 CSS */\n.a {\n  color: green;\n}\n.a {\n  color: green;\n}\n')])])])])]),t._v(" "),n("h2",{attrs:{id:"函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),n("p",[n("strong",[t._v("判断类型")])]),t._v(" "),n("ul",[n("li",[t._v("isnumber")])]),t._v(" "),n("blockquote",[n("p",[t._v("判断给定的值 是否 是一个数字。")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('isnumber(#ff0);     // false\nisnumber(blue);     // false\nisnumber("string"); // false\nisnumber(1234);     // true\nisnumber(56px);     // true\nisnumber(7.8%);     // true\nisnumber(keyword);  // false\nisnumber(url(...)); // false\n复制代码\n')])])]),n("ul",[n("li",[t._v("iscolor")])]),t._v(" "),n("blockquote",[n("p",[t._v("判断给定的值 是否 是一个颜色。")])]),t._v(" "),n("ul",[n("li",[t._v("isurl")])]),t._v(" "),n("blockquote",[n("p",[t._v("判断给定的值 是否 是一个 url 。")])]),t._v(" "),n("p",[n("strong",[t._v("颜色操作")])]),t._v(" "),n("ul",[n("li",[t._v("saturate")])]),t._v(" "),n("blockquote",[n("p",[t._v("增加一定数值的颜色饱和度。")])]),t._v(" "),n("ul",[n("li",[t._v("lighten")])]),t._v(" "),n("blockquote",[n("p",[t._v("增加一定数值的颜色亮度。")])]),t._v(" "),n("ul",[n("li",[t._v("darken")])]),t._v(" "),n("blockquote",[n("p",[t._v("降低一定数值的颜色亮度。")])]),t._v(" "),n("ul",[n("li",[t._v("fade")])]),t._v(" "),n("blockquote",[n("p",[t._v("给颜色设定一定数值的透明度。")])]),t._v(" "),n("ul",[n("li",[t._v("mix")])]),t._v(" "),n("blockquote",[n("p",[t._v("根据比例混合两种颜色。")])]),t._v(" "),n("p",[n("strong",[t._v("数学函数")])]),t._v(" "),n("ul",[n("li",[t._v("ceil")])]),t._v(" "),n("blockquote",[n("p",[t._v("向上取整。")])]),t._v(" "),n("ul",[n("li",[t._v("floor")])]),t._v(" "),n("blockquote",[n("p",[t._v("向下取整。")])]),t._v(" "),n("ul",[n("li",[t._v("percentage")])]),t._v(" "),n("blockquote",[n("p",[t._v("将浮点数转换为百分比字符串。")])]),t._v(" "),n("ul",[n("li",[t._v("round")])]),t._v(" "),n("blockquote",[n("p",[t._v("四舍五入。")])]),t._v(" "),n("ul",[n("li",[t._v("sqrt")])]),t._v(" "),n("blockquote",[n("p",[t._v("计算一个数的平方根。")])]),t._v(" "),n("ul",[n("li",[t._v("abs")])]),t._v(" "),n("blockquote",[n("p",[t._v("计算数字的绝对值，原样保持单位。")])]),t._v(" "),n("ul",[n("li",[t._v("pow")])]),t._v(" "),n("blockquote",[n("p",[t._v("计算一个数的乘方。")])]),t._v(" "),n("h2",{attrs:{id:"其他"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),n("ol",[n("li",[n("p",[n("strong",[t._v("注释")])]),t._v(" "),n("ul",[n("li",[t._v("/* */ CSS原生注释，会被编译在 CSS 文件中。")]),t._v(" "),n("li",[t._v("/  / Less提供的一种注释，不会被编译在 CSS 文件中。")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("避免编译")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* Less */\n#main{\n  width:~'calc(300px-30px)';\n}\n\n/* 生成后的 CSS */\n#main{\n  width:calc(300px-30px);\n}\n复制代码\n")])])]),n("p",[t._v("结构： "),n("code",[t._v("~' 值 '")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("变量拼串")])]),t._v(" "),n("p",[t._v("在平时工作中，这种需求 太常见了。 在下面例子中， 实现了不同的 transtion-delay、animation、@keyframes")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('.judge(@i) when(@i=1){\n  @size:15px;\n}\n.judge(@i) when(@i>1){\n  @size:16px;\n}\n.loopAnimation(@i) when (@i<16) {\n  \n  .circle:nth-child(@{i}){\n      .judeg(@i);\n      border-radius:@size @size 0 0;\n      animation: ~"circle-@{i}" @duration infinite @ease;\n      transition-delay:~"@{i}ms";\n  }\n  @keyframes ~"circle-@{i}" {\n      // do something...\n  }\n  .loopAnimation(@i + 1);\n}\n复制代码\n')])])]),n("p",[t._v("结构： "),n("code",[t._v('~"字符@{变量}字符"')]),t._v(";")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("使用 JS")])]),t._v(" "),n("p",[t._v("因为 Less 是由 JS 编写，所以 Less 有一得天独厚的特性：代码中使用 Javascript 。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('/* Less */\n@content:`"aaa".toUpperCase()`;\n#randomColor{\n  @randomColor: ~"rgb(`Math.round(Math.random() * 256)`,`Math.round(Math.random() * 256)`,`Math.round(Math.random() * 256)`)";\n}\n#wrap{\n  width: ~"`Math.round(Math.random() * 100)`px";\n  &:after{\n      content:@content;\n  }\n  height: ~"`window.innerHeight`px";\n  alert:~"`alert(1)`";\n  #randomColor();\n  background-color: @randomColor;\n}\n/* 生成后的 CSS */\n\n// 弹出 1\n#wrap{\n  width: 随机值（0~100）px;\n  height: 743px;//由电脑而异\n  background: 随机颜色;\n}\n#wrap::after{\n  content:"AAA";\n}\n复制代码\n')])])])])]),t._v(" "),n("p",[t._v("前几个月 ， 有个 "),n("code",[t._v("CSS in JS")]),t._v(" 的概念非常火，现在 看来 "),n("code",[t._v("JS in CSS")]),t._v(" 也未曾不可。 我觉得完全可以根据 Less 这个特性来造个轮子，JS来控制 CSS ，形成 动态属性，如果成功 很可能会改变 现在前端的打开姿势。")]),t._v(" "),n("h2",{attrs:{id:"与sass区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#与sass区别"}},[t._v("#")]),t._v(" 与SASS区别")]),t._v(" "),n("h4",{attrs:{id:"_1、编译环境不一样"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、编译环境不一样"}},[t._v("#")]),t._v(" 1、编译环境不一样")]),t._v(" "),n("p",[n("code",[t._v("Sass")]),t._v("的安装需要Ruby环境，是在"),n("strong",[t._v("服务端")]),t._v("处理的。 "),n("code",[t._v("Less")]),t._v("是需要引入less.js来处理Less代码输出css到浏览器，也可以在开发环节使用Less，然后"),n("strong",[t._v("编译成css文件")]),t._v("，直接放到项目中，也有 Less.app、SimpleLess、CodeKit.app这样的工具，也有在线编译地址。")]),t._v(" "),n("h4",{attrs:{id:"_2、变量符不一样"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、变量符不一样"}},[t._v("#")]),t._v(" 2、变量符不一样")]),t._v(" "),n("p",[n("code",[t._v("SASS")]),t._v(" 变量符是 $")]),t._v(" "),n("p",[n("code",[t._v("LESS")]),t._v(" 变量符是 @")]),t._v(" "),n("h4",{attrs:{id:"_3、变量的作用域也不一样"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、变量的作用域也不一样"}},[t._v("#")]),t._v(" 3、变量的作用域也不一样")]),t._v(" "),n("div",{staticClass:"language-css extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[t._v("Less-作用域\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #00c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 蓝色 */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#header")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #c00"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* red */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid "),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 红色边框 */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#footer")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid "),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 蓝色边框 */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("Less-作用域编译后\n#header")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1px solid #cc0000"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#footer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1px solid #0000cc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nscss-作用域\n$"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #00c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 蓝色 */")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#header")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  $"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #c00"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* red */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid $color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 红色边框 */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#footer")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid $color"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 蓝色边框 */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("Sass-作用域编译后\n\n#header")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1px solid #c00"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#footer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1px solid #c00"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n")])])]),n("p",[t._v("Less区分上下级作用域，SCSS为就近原则")]),t._v(" "),n("p",[t._v("我们可以看出来，less和scss中的变量会随着作用域的变化而不一样。")]),t._v(" "),n("h4",{attrs:{id:"_4、输出设置不同"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4、输出设置不同"}},[t._v("#")]),t._v(" 4、输出设置不同")]),t._v(" "),n("p",[n("code",[t._v("Sass")]),t._v("提供4中输出选项："),n("strong",[t._v("nested")]),t._v(", "),n("strong",[t._v("compact")]),t._v(", "),n("strong",[t._v("compressed")]),t._v(" 和 "),n("strong",[t._v("expanded")]),t._v("。")]),t._v(" "),n("p",[t._v("输出样式的风格可以有四种选择，默认为nested")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("nested：嵌套缩进的css代码\nexpanded：展开的多行css代码\ncompact：简洁格式的css代码\ncompressed：压缩后的css代码\n复制代码\n")])])]),n("p",[n("code",[t._v("Less")]),t._v("没有输出设置")]),t._v(" "),n("h4",{attrs:{id:"_5、支持语句不同"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5、支持语句不同"}},[t._v("#")]),t._v(" 5、支持语句不同")]),t._v(" "),n("p",[n("code",[t._v("Sass")]),t._v("支持条件语句，可以使用if{}else{},for{}循环等等。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/* Sample Sass “if” statement */\n\n@if lightness($color) > 30% {\n\n} @else {\n\n}\n\n/* Sample Sass “for” loop */\n\n@for $i from 1 to 10 {\n  .border-#{$i} {\n    border: #{$i}px solid blue;\n  }\n}\n复制代码\n")])])]),n("p",[n("code",[t._v("Less")]),t._v("不支持。")]),t._v(" "),n("h4",{attrs:{id:"_6、引用外部-css-文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6、引用外部-css-文件"}},[t._v("#")]),t._v(" 6、引用外部 CSS 文件")]),t._v(" "),n("p",[n("code",[t._v("Scss")]),t._v("引用的外部文件命名必须以_开头, 如下例所示:其中_test1.scss、_test2.scss、_test3.scss文件分别设置的h1 h2 h3。文件名如果以下划线_开头的话，Sass会认为该文件是一个引用文件，不会将其编译为css文件.")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('// 源代码：\n@import "_test1.scss";\n@import "_test2.scss";\n@import "_test3.scss";\n// 编译后：\nh1 {\n  font-size: 17px;\n}\n \nh2 {\n  font-size: 17px;\n}\n \nh3 {\n  font-size: 17px;\n}\n复制代码\n')])])]),n("p",[n("code",[t._v("Less")]),t._v("引用外部文件和css中的@import没什么差异。")]),t._v(" "),n("h4",{attrs:{id:"_7、工具库不同"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7、工具库不同"}},[t._v("#")]),t._v(" 7、工具库不同")]),t._v(" "),n("p",[n("code",[t._v("Sass")]),t._v("有工具库Compass, 简单说，Sass和Compass的关系有点像Javascript和jQuery的关系,Compass是Sass的工具库。在它的基础上，封装了一系列有用的模块和模板，补充强化了Sass的功能。")]),t._v(" "),n("p",[n("code",[t._v("Less")]),t._v("有UI组件库Bootstrap,Bootstrap是web前端开发中一个比较有名的前端UI组件库，Bootstrap的样式文件部分源码就是采用Less语法编写。")])])}),[],!1,null,null,null);s.default=e.exports}}]);