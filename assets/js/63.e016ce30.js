(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{640:function(s,t,a){"use strict";a.r(t);var e=a(5),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("blockquote",[a("p",[s._v("关于写公司项目的时候因为没有给组件的"),a("code",[s._v("<style>")]),s._v("加上"),a("code",[s._v("scoped")]),s._v(" 属性，导致影响了整个项目的样式，而且还"),a("code",[s._v("push")]),s._v("上了"),a("code",[s._v("gitlab")]),s._v("，特别写了此篇避坑，希望大家引以为戒。")])]),s._v(" "),a("h2",{attrs:{id:"style加scoped属性的用途和原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#style加scoped属性的用途和原理"}},[s._v("#")]),s._v(" style加scoped属性的用途和原理")]),s._v(" "),a("blockquote",[a("p",[s._v("在标签上绑定了自定义属性，防止css全局污染\n但是很多时候使用ui框架如果加scope就不能覆盖，这个时候一般写sass 会在最外层包裹该组件名的id 就可以不使用scoped 了, 不过用/deep/也可以对组件内的样式进行覆盖")])]),s._v(" "),a("p",[s._v("用途：防止全局同名CSS污染")]),s._v(" "),a("p",[s._v("原理：在标签加上v-data-something属性，再在选择器时加上对应[v-data-something]，即CSS带属性选择器，以此完成类似作用域的选择方式")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://pic2.zhimg.com/80/v2-75d8c9a12c8b3049677f09fdf72a14dd_720w.png",alt:"img"}})]),s._v(" "),a("p",[a("strong",[s._v("一、scoped会在元素上添加唯一的属性（data-v-x形式），css编译后也会加上属性选择器，从而达到限制作用域的目的。")])]),s._v(" "),a("p",[s._v("缺点：")]),s._v(" "),a("p",[s._v("（1）由于只是通过属性限制，类还是原来的类，所以在其他地方对类设置样式还是可以造成污染。")]),s._v(" "),a("p",[s._v("（2）添加了属性选择器，对于CSS选择器的权重加重了。")]),s._v(" "),a("p",[s._v("（3）外层组件包裹子组件，会给子组件的根节点添加data属性。在外层组件中无法修改子组件中除了根节点以外的节点的样式。比如子组件中有box类，在父节点中设置样式，会被编译为")]),s._v(" "),a("p",[s._v(".box[data-v-x]的形式，但是box类所在的节点上没有添加data属性，因此无法修改样式。")]),s._v(" "),a("p",[s._v("可以使用/deep/或者>>>穿透CSS，这样外层组件设置的box类编译后的就为[data-v-x] .box了，就可以进行修改。")]),s._v(" "),a("p",[a("strong",[s._v("二、可以使用CSS Module")])]),s._v(" "),a("p",[s._v("CSS Module没有添加唯一属性，而是通过修改类名限制作用域。这样类发生了变化，在其他地方设置样式无法造成污染，也没有使CSS选择器的权重增加。")]),s._v(" "),a("p",[s._v("这里给大家排个坑，这里虽然设置了scoped 如果我们使用bootstrap的话，因为bootstrap是设置的全局属性，可能会有冲突，")]),s._v(" "),a("h2",{attrs:{id:"scoped-css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scoped-css"}},[s._v("#")]),s._v(" Scoped CSS")]),s._v(" "),a("p",[s._v("当 "),a("code",[s._v("<style>")]),s._v(" 标签有 "),a("code",[s._v("scoped")]),s._v(" 属性时，它的 CSS 只作用于当前组件中的元素。这类似于 Shadow DOM 中的样式封装。它有一些注意事项，但不需要任何 polyfill。它通过使用 PostCSS 来实现以下转换：")]),s._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("style")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("scoped")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[s._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".example")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("div")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("hi"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])])]),a("p",[s._v("转换结果：")]),s._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[s._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".example[data-v-f3f3eg9]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("div")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("data-v-f3f3eg9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("hi"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])])]),a("h3",{attrs:{id:"关于css作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于css作用域"}},[s._v("#")]),s._v(" 关于css作用域")]),s._v(" "),a("p",[s._v("之前一直很困扰css的作用域问题，即使是模块化编程下，在对应的模块的js中import css进来，这个css仍然是全局的。导致在css中需要加上对应模块的html的id/class 使用css选择器 保证css的作用域不会变成全局 而被其它模块的css污染。")]),s._v(" "),a("p",[s._v("在vue中引入了scoped这个概念，scoped的设计思想就是让当前组件的样式不会修改到其它地方的样式，使用了data-v-hash的方式来使css有了它对应模块的标识，这样写css的时候不需要加太多额外的选择器，方便很多。")]),s._v(" "),a("p",[s._v("但是要注意scoped的作用域，因为权重的问题，如果是在子组件使用了scoped，那么在父组件中是不能直接修改子组件的样式的，需要在父组件中使用vue的深度作用选择器。")]),s._v(" "),a("h3",{attrs:{id:"scoped坑点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scoped坑点"}},[s._v("#")]),s._v(" scoped坑点")]),s._v(" "),a("p",[s._v("在覆盖iview组件样式的时候发现一个问题，就是无法覆盖组件原有的样式，最后在github的"),a("code",[s._v("issue")]),s._v("中找到了答案： 不要使用"),a("code",[s._v("scoped")]),s._v("属性。于是我查找了下关于"),a("code",[s._v("scoped")]),s._v("的文章。")]),s._v(" "),a("p",[s._v("我们假设把这种组件叫做模块私有组件，其他的未加scoped的叫做模块一般组件。通过查看DOM结构发现：vue通过在DOM结构以及css样式上加唯一不重复的标记，以保证唯一，达到样式私有化模块化的目的。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("scoped")]),s._v("三条渲染规则：")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("给HTML的DOM节点加一个不重复data属性(形如："),a("code",[s._v("data-v-19fca230")]),s._v(")来表示他的唯一性")])]),s._v(" "),a("li",[a("p",[s._v("在每句css选择器的末尾（编译后的生成的css语句）加一个当前组件的"),a("code",[s._v("data")]),s._v("属性选择器（如"),a("code",[s._v("[data-v-19fca230]")]),s._v("）来私有化样式")])]),s._v(" "),a("li",[a("p",[s._v("如果组件内部包含有其他组件，只会给其他组件的最外层标签加上当前组件的data属性")])])]),s._v(" "),a("h2",{attrs:{id:"混用本地和全局样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#混用本地和全局样式"}},[s._v("#")]),s._v(" 混用本地和全局样式")]),s._v(" "),a("p",[s._v("你可以在一个组件中同时使用有 scoped 和非 scoped 样式：")]),s._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 全局样式 */")]),s._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("style")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("scoped")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 本地样式 */")]),s._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])])]),a("h3",{attrs:{id:"子组件的根元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子组件的根元素"}},[s._v("#")]),s._v(" 子组件的根元素")]),s._v(" "),a("p",[s._v("使用 "),a("code",[s._v("scoped")]),s._v(" 后，父组件的样式将不会渗透到子组件中。不过一个子组件的根节点会同时受其父组件的 scoped CSS 和子组件的 scoped CSS 的影响。这样设计是为了让父组件可以从布局的角度出发，调整其子组件根元素的样式。")]),s._v(" "),a("h3",{attrs:{id:"深度作用选择器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深度作用选择器"}},[s._v("#")]),s._v(" 深度作用选择器")]),s._v(" "),a("p",[s._v("如果你希望 "),a("code",[s._v("scoped")]),s._v(" 样式中的一个选择器能够作用得“更深”，例如影响子组件，你可以使用 "),a("code",[s._v(">>>")]),s._v(" 操作符：")]),s._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("style")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("scoped")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[s._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".a >>> .b")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])])]),a("p",[s._v("上述代码将会编译成：")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".a[data-v-f3f3eg9] .b")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ... */")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("有些像 Sass 之类的预处理器无法正确解析 "),a("code",[s._v(">>>")]),s._v("。这种情况下你可以使用 "),a("code",[s._v("/deep/")]),s._v(" 或 "),a("code",[s._v("::v-deep")]),s._v(" 操作符取而代之——两者都是 "),a("code",[s._v(">>>")]),s._v(" 的别名，同样可以正常工作。")]),s._v(" "),a("h3",{attrs:{id:"动态生成的内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态生成的内容"}},[s._v("#")]),s._v(" 动态生成的内容")]),s._v(" "),a("p",[s._v("通过 "),a("code",[s._v("v-html")]),s._v(" 创建的 DOM 内容不受 scoped 样式影响，但是你仍然可以通过深度作用选择器来为他们设置样式。")]),s._v(" "),a("h3",{attrs:{id:"还有一些要留意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#还有一些要留意"}},[s._v("#")]),s._v(" 还有一些要留意")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("Scoped 样式不能代替 class")]),s._v("。考虑到浏览器渲染各种 CSS 选择器的方式，当 "),a("code",[s._v("p { color: red }")]),s._v(" 是 scoped 时 (即与特性选择器组合使用时) 会慢很多倍。如果你使用 class 或者 id 取而代之，比如 "),a("code",[s._v(".example { color: red }")]),s._v("，性能影响就会消除。")]),s._v(" "),a("li",[a("strong",[s._v("在递归组件中小心使用后代选择器!")]),s._v(" 对选择器 "),a("code",[s._v(".a .b")]),s._v(" 中的 CSS 规则来说，如果匹配 "),a("code",[s._v(".a")]),s._v(" 的元素包含一个递归子组件，则所有的子组件中的 "),a("code",[s._v(".b")]),s._v(" 都将被这个规则匹配。")])]),s._v(" "),a("h2",{attrs:{id:"问题补充"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题补充"}},[s._v("#")]),s._v(" "),a("strong",[s._v("问题补充：")])]),s._v(" "),a("h3",{attrs:{id:"如果不使用scoped-如何解决样式全局污染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如果不使用scoped-如何解决样式全局污染"}},[s._v("#")]),s._v(" 如果不使用"),a("code",[s._v("scoped，")]),s._v("如何解决样式全局污染？")]),s._v(" "),a("p",[s._v("推荐使用"),a("code",[s._v("scoped")]),s._v("推动组件私有化，文章所提到的不使用仅出现在已有UI库的样式覆盖上（当然人家用了"),a("code",[s._v("scoped")]),s._v(" 那就很难办了）。")]),s._v(" "),a("p",[s._v("首先，解决"),a("strong",[s._v("组件样式全局污染")]),s._v("，也就是我们在这里不使用"),a("code",[s._v("scoped")]),s._v(" 覆盖了样式，那么我们在其他地方调用该组件就会被覆盖。那么我们在使用组件的时候对组件给一个"),a("strong",[s._v("类名")]),s._v(" 或者其他甄别属性（id），覆盖样式就针对该类名进行重写样式。")]),s._v(" "),a("p",[s._v("其次，解决"),a("strong",[s._v("其他样式全局污染")]),s._v("，如果我们通过：")]),s._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("style")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("lang")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("less"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[s._v("\n    "),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[s._v("@import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./test.less"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])]),s._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])])]),a("p",[s._v("引进样式，那么不使用"),a("code",[s._v("scoped")]),s._v(" ，"),a("code",[s._v('"./test.less"')]),s._v(" 中的其他类名样式可能会污染全局，我这里用一个比较笨的方法处理：在模板中使用两次"),a("code",[s._v("<style></style>")]),s._v(" 标签：")]),s._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("style")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("lang")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("less"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("scoped")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[s._v("\n    "),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[s._v("@import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./test.less"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])]),s._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("style")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("lang")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("less"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[s._v("\n    //你的覆盖样式\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])])]),a("p",[s._v("这样既覆盖了样式，其他样式不会被覆盖到全局，感兴趣的同学可以自己试一试。（注意两个标签的顺序）。")]),s._v(" "),a("p",[s._v("官网 "),a("a",{attrs:{href:"https://vue-loader.vuejs.org/zh/guide/scoped-css.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("vue-loader"),a("OutboundLink")],1),s._v(" 中提到每个vue模板中可以有多个"),a("code",[s._v("<style></style>")]),s._v("标签，所以上面的写法是没有问题的。")])])}),[],!1,null,null,null);t.default=n.exports}}]);