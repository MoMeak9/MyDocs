(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{662:function(t,s,a){"use strict";a.r(s);var e=a(5),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"nginx-详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-详解"}},[t._v("#")]),t._v(" Nginx 详解")]),t._v(" "),a("blockquote",[a("p",[t._v("作者：SHERlocked93\n链接：https://juejin.cn/post/6844904144235413512\n来源：稀土掘金")])]),t._v(" "),a("h2",{attrs:{id:"_1-nginx-介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-nginx-介绍"}},[t._v("#")]),t._v(" 1. Nginx 介绍")]),t._v(" "),a("p",[t._v("传统的 Web 服务器，每个客户端连接作为一个单独的进程或线程处理，需在切换任务时将 CPU 切换到新的任务并创建一个新的运行时上下文，消耗额外的内存和 CPU 时间，当并发请求增加时，服务器响应变慢，从而对性能产生负面影响。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/29/171c4e967b9714ed~tplv-t2oaga2asx-watermark.awebp",alt:"Nginx"}})]),t._v(" "),a("p",[t._v("Nginx 是开源、高性能、高可靠的 Web 和反向代理服务器，而且支持热部署，几乎可以做到 7 * 24 小时不间断运行，即使运行几个月也不需要重新启动，还能在不间断服务的情况下对软件版本进行热更新。性能是 Nginx 最重要的考量，其占用内存少、并发能力强、能支持高达 5w 个并发连接数，最重要的是，Nginx 是免费的并可以商业化，配置使用也比较简单。")]),t._v(" "),a("p",[t._v("Nginx 的最重要的几个使用场景：")]),t._v(" "),a("ol",[a("li",[t._v("静态资源服务，通过本地文件系统提供服务；")]),t._v(" "),a("li",[t._v("反向代理服务，延伸出包括缓存、负载均衡等；")]),t._v(" "),a("li",[t._v("API 服务，OpenResty ；")])]),t._v(" "),a("p",[t._v("对于前端来说 Node.js 不陌生了，Nginx 和 Node.js 的很多理念类似，HTTP 服务器、事件驱动、异步非阻塞等，且 Nginx 的大部分功能使用 Node.js 也可以实现，但 Nginx 和 Node.js 并不冲突，都有自己擅长的领域。Nginx 擅长于底层服务器端资源的处理（静态资源处理转发、反向代理，负载均衡等），Node.js 更擅长上层具体业务逻辑的处理，两者可以完美组合，共同助力前端开发。")]),t._v(" "),a("p",[t._v("下面我们着重学习一下 Nginx 的使用。")]),t._v(" "),a("h2",{attrs:{id:"_2-相关概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-相关概念"}},[t._v("#")]),t._v(" 2. 相关概念")]),t._v(" "),a("h3",{attrs:{id:"_2-1-简单请求和非简单请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-简单请求和非简单请求"}},[t._v("#")]),t._v(" 2.1 简单请求和非简单请求")]),t._v(" "),a("p",[t._v("首先我们来了解一下简单请求和非简单请求，如果同时满足下面两个条件，就属于简单请求：")]),t._v(" "),a("ol",[a("li",[t._v("请求方法是 "),a("code",[t._v("HEAD")]),t._v("、"),a("code",[t._v("GET")]),t._v("、"),a("code",[t._v("POST")]),t._v(" 三种之一；")]),t._v(" "),a("li",[t._v("HTTP 头信息不超过右边着几个字段："),a("code",[t._v("Accept")]),t._v("、"),a("code",[t._v("Accept-Language")]),t._v("、"),a("code",[t._v("Content-Language")]),t._v("、"),a("code",[t._v("Last-Event-ID")]),t._v(" "),a("code",[t._v("Content-Type")]),t._v(" 只限于三个值 "),a("code",[t._v("application/x-www-form-urlencoded")]),t._v("、"),a("code",[t._v("multipart/form-data")]),t._v("、"),a("code",[t._v("text/plain")]),t._v("；")])]),t._v(" "),a("p",[t._v("凡是不同时满足这两个条件的，都属于非简单请求。")]),t._v(" "),a("p",[t._v("浏览器处理简单请求和非简单请求的方式不一样：")]),t._v(" "),a("p",[a("strong",[t._v("简单请求")])]),t._v(" "),a("p",[t._v("对于简单请求，浏览器会在头信息中增加 "),a("code",[t._v("Origin")]),t._v(" 字段后直接发出，"),a("code",[t._v("Origin")]),t._v(" 字段用来说明，本次请求来自的哪个源（协议+域名+端口）。")]),t._v(" "),a("p",[t._v("如果服务器发现 "),a("code",[t._v("Origin")]),t._v(" 指定的源不在许可范围内，服务器会返回一个正常的 HTTP 回应，浏览器取到回应之后发现回应的头信息中没有包含 "),a("code",[t._v("Access-Control-Allow-Origin")]),t._v(" 字段，就抛出一个错误给 XHR 的 "),a("code",[t._v("error")]),t._v(" 事件；")]),t._v(" "),a("p",[t._v("如果服务器发现 "),a("code",[t._v("Origin")]),t._v(" 指定的域名在许可范围内，服务器返回的响应会多出几个 "),a("code",[t._v("Access-Control-")]),t._v(" 开头的头信息字段。")]),t._v(" "),a("p",[a("strong",[t._v("非简单请求")])]),t._v(" "),a("p",[t._v("非简单请求是那种对服务器有特殊要求的请求，比如请求方法是 "),a("code",[t._v("PUT")]),t._v(" 或 "),a("code",[t._v("DELETE")]),t._v("，或 "),a("code",[t._v("Content-Type")]),t._v(" 值为 "),a("code",[t._v("application/json")]),t._v("。浏览器会在正式通信之前，发送一次 HTTP 预检 "),a("code",[t._v("OPTIONS")]),t._v(" 请求，先询问服务器，当前网页所在的域名是否在服务器的许可名单之中，以及可以使用哪些 HTTP 请求方法和头信息字段。只有得到肯定答复，浏览器才会发出正式的 "),a("code",[t._v("XHR")]),t._v(" 请求，否则报错。")]),t._v(" "),a("h3",{attrs:{id:"_2-2-跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-跨域"}},[t._v("#")]),t._v(" 2.2 跨域")]),t._v(" "),a("p",[t._v("在浏览器上当前访问的网站向另一个网站发送请求获取数据的过程就是"),a("strong",[t._v("跨域请求")]),t._v("。")]),t._v(" "),a("p",[t._v("跨域是浏览器的"),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FSecurity%2FSame-origin_policy",target:"_blank",rel:"noopener noreferrer"}},[t._v("同源策略"),a("OutboundLink")],1),t._v("决定的，是一个重要的浏览器安全策略，用于限制一个 "),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FGlossary%2F%E6%BA%90",target:"_blank",rel:"noopener noreferrer"}},[t._v("origin"),a("OutboundLink")],1),t._v(" 的文档或者它加载的脚本与另一个源的资源进行交互，它能够帮助阻隔恶意文档，减少可能被攻击的媒介，可以使用 "),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FGlossary%2FCORS",target:"_blank",rel:"noopener noreferrer"}},[t._v("CORS"),a("OutboundLink")],1),t._v(" 配置解除这个限制。")]),t._v(" "),a("p",[t._v("关于跨域网上已经有很多解释，这里就不啰嗦，也可以直接看 MDN 的 "),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FSecurity%2FSame-origin_policy",target:"_blank",rel:"noopener noreferrer"}},[t._v("<浏览器的同源策略>"),a("OutboundLink")],1),t._v(" 文档进一步了解，这里就列举几个同源和不同元的例子，相信程序员都能看得懂。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 同源的例子")]),t._v("\nhttp://example.com/app1/index.html  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 只是路径不同")]),t._v("\nhttp://example.com/app2/index.html\n\nhttp://Example.com:80  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 只是大小写差异")]),t._v("\nhttp://example.com\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 不同源的例子")]),t._v("\nhttp://example.com/app1   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 协议不同")]),t._v("\nhttps://example.com/app2\n\nhttp://example.com        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# host 不同")]),t._v("\nhttp://www.example.com\nhttp://myapp.example.com\n\nhttp://example.com        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端口不同")]),t._v("\nhttp://example.com:8080\n复制代码\n")])])]),a("h3",{attrs:{id:"_2-3-正向代理和反向代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-正向代理和反向代理"}},[t._v("#")]),t._v(" 2.3 正向代理和反向代理")]),t._v(" "),a("p",[t._v("反向代理（Reverse Proxy）对应的是正向代理（Forward Proxy），他们的区别：")]),t._v(" "),a("p",[a("strong",[t._v("正向代理：")]),t._v(" 一般的访问流程是客户端直接向目标服务器发送请求并获取内容，使用正向代理后，客户端改为向代理服务器发送请求，并指定目标服务器（原始服务器），然后由代理服务器和原始服务器通信，转交请求并获得的内容，再返回给客户端。正向代理隐藏了真实的客户端，为客户端收发请求，使真实客户端对服务器不可见；")]),t._v(" "),a("p",[t._v("举个具体的例子 🌰，你的浏览器无法直接访问谷哥，这时候可以通过一个代理服务器来帮助你访问谷哥，那么这个服务器就叫正向代理。")]),t._v(" "),a("p",[a("strong",[t._v("反向代理：")]),t._v(" 与一般访问流程相比，使用反向代理后，直接收到请求的服务器是代理服务器，然后将请求转发给内部网络上真正进行处理的服务器，得到的结果返回给客户端。反向代理隐藏了真实的服务器，为服务器收发请求，使真实服务器对客户端不可见。一般在处理跨域请求的时候比较常用。现在基本上所有的大型网站都设置了反向代理。")]),t._v(" "),a("p",[t._v("举个具体的例子 🌰，去饭店吃饭，可以点川菜、粤菜、江浙菜，饭店也分别有三个菜系的厨师 👨‍🍳，但是你作为顾客不用管哪个厨师给你做的菜，只用点菜即可，小二将你菜单中的菜分配给不同的厨师来具体处理，那么这个小二就是反向代理服务器。")]),t._v(" "),a("p",[t._v("简单的说，一般给客户端做代理的都是正向代理，给服务器做代理的就是反向代理。")]),t._v(" "),a("p",[t._v("正向代理和反向代理主要的原理区别可以参见下图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/29/171c4e96d99eecdc~tplv-t2oaga2asx-watermark.awebp",alt:"正向代理与反向代理"}})]),t._v(" "),a("h3",{attrs:{id:"_2-4-负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-负载均衡"}},[t._v("#")]),t._v(" 2.4 负载均衡")]),t._v(" "),a("p",[t._v("一般情况下，客户端发送多个请求到服务器，服务器处理请求，其中一部分可能要操作一些资源比如数据库、静态资源等，服务器处理完毕后，再将结果返回给客户端。")]),t._v(" "),a("p",[t._v("这种模式对于早期的系统来说，功能要求不复杂，且并发请求相对较少的情况下还能胜任，成本也低。随着信息数量不断增长，访问量和数据量飞速增长，以及系统业务复杂度持续增加，这种做法已无法满足要求，并发量特别大时，服务器容易崩。")]),t._v(" "),a("p",[t._v("很明显这是由于服务器性能的瓶颈造成的问题，除了堆机器之外，最重要的做法就是负载均衡。")]),t._v(" "),a("p",[t._v("请求爆发式增长的情况下，单个机器性能再强劲也无法满足要求了，这个时候集群的概念产生了，单个服务器解决不了的问题，可以使用多个服务器，然后将请求分发到各个服务器上，将负载分发到不同的服务器，这就是"),a("strong",[t._v("负载均衡")]),t._v("，核心是「分摊压力」。Nginx 实现负载均衡，一般来说指的是将请求转发给服务器集群。")]),t._v(" "),a("p",[t._v("举个具体的例子 🌰，晚高峰乘坐地铁的时候，入站口经常会有地铁工作人员大喇叭“请走 B 口，B 口人少车空....”，这个工作人员的作用就是负载均衡。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/SHERlocked93/pic@env/uPic/2020-03-09-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1.png",alt:"负载均衡"}})]),t._v(" "),a("h3",{attrs:{id:"_2-5-动静分离"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-动静分离"}},[t._v("#")]),t._v(" 2.5 动静分离")]),t._v(" "),a("p",[t._v("为了加快网站的解析速度，可以把动态页面和静态页面由不同的服务器来解析，加快解析速度，降低原来单个服务器的压力。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/SHERlocked93/pic@env/uPic/2020-03-09-%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB.png",alt:"动静分离"}})]),t._v(" "),a("p",[t._v("一般来说，都需要将动态资源和静态资源分开，由于 Nginx 的高并发和静态资源缓存等特性，经常将静态资源部署在 Nginx 上。如果请求的是静态资源，直接到静态资源目录获取资源，如果是动态资源的请求，则利用反向代理的原理，把请求转发给对应后台应用去处理，从而实现动静分离。")]),t._v(" "),a("p",[t._v("使用前后端分离后，可以很大程度提升静态资源的访问速度，即使动态服务不可用，静态资源的访问也不会受到影响。")]),t._v(" "),a("h2",{attrs:{id:"_3-nginx-快速安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-nginx-快速安装"}},[t._v("#")]),t._v(" 3. Nginx 快速安装")]),t._v(" "),a("h3",{attrs:{id:"_3-1-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-安装"}},[t._v("#")]),t._v(" 3.1 安装")]),t._v(" "),a("p",[t._v("我们可以先看看")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("yum list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" nginx\n复制代码\n")])])]),a("p",[t._v("来看看")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/29/171c4e967ad35156~tplv-t2oaga2asx-watermark.awebp",alt:"image-20200307180412726"}})]),t._v(" "),a("p",[t._v("然后")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("yum "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" nginx\n复制代码\n")])])]),a("p",[t._v("来安装 Nginx，然后我们在命令行中 "),a("code",[t._v("nginx -v")]),t._v(" 就可以看到具体的 Nginx 版本信息，也就安装完毕了。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/29/171c4e967cd99d22~tplv-t2oaga2asx-watermark.awebp",alt:"image-20200307180545816"}})]),t._v(" "),a("h3",{attrs:{id:"_3-2-相关文件夹"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-相关文件夹"}},[t._v("#")]),t._v(" 3.2 相关文件夹")]),t._v(" "),a("p",[t._v("然后我们可以使用 "),a("code",[t._v("rpm -ql nginx")]),t._v(" 来查看 Nginx 被安装到了什么地方，有哪些相关目录，其中位于 "),a("code",[t._v("/etc")]),t._v(" 目录下的主要是配置文件，还有一些文件见下图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/29/171c4e969c75753f~tplv-t2oaga2asx-watermark.awebp",alt:"Xnip2020-03-07_21-46-11"}})]),t._v(" "),a("p",[t._v("主要关注的文件夹有两个：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("/etc/nginx/conf.d/")]),t._v(" 文件夹，是我们进行子配置的配置项存放处，"),a("code",[t._v("/etc/nginx/nginx.conf")]),t._v(" 主配置文件会默认把这个文件夹中所有子配置项都引入；")]),t._v(" "),a("li",[a("code",[t._v("/usr/share/nginx/html/")]),t._v(" 文件夹，通常静态文件都放在这个文件夹，也可以根据你自己的习惯放其他地方；")])]),t._v(" "),a("h3",{attrs:{id:"_3-3-跑起来康康"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-跑起来康康"}},[t._v("#")]),t._v(" 3.3 跑起来康康")]),t._v(" "),a("p",[t._v("安装之后开启 Nginx，如果系统开启了防火墙，那么需要设置一下在防火墙中加入需要开放的端口，下面列举几个常用的防火墙操作（没开启的话不用管这个）：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("systemctl start firewalld  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启防火墙")]),t._v("\nsystemctl stop firewalld   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关闭防火墙")]),t._v("\nsystemctl status firewalld "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看防火墙开启状态，显示running则是正在运行")]),t._v("\nfirewall-cmd --reload      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启防火墙，永久打开端口需要reload一下")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加开启端口，--permanent表示永久打开，不加是临时打开重启之后失效")]),t._v("\nfirewall-cmd --permanent --zone"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("public --add-port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8888")]),t._v("/tcp\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看防火墙，添加的端口也可以看到")]),t._v("\nfirewall-cmd --list-all\n复制代码\n")])])]),a("p",[t._v("然后设置 Nginx 的开机启动：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" nginx\n复制代码\n")])])]),a("p",[t._v("启动 Nginx （其他命令后面有详细讲解）：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("systemctl start nginx\n复制代码\n")])])]),a("p",[t._v("然后访问你的 IP，这时候就可以看到 Nginx 的欢迎页面了～ "),a("code",[t._v("Welcome to nginx！")]),t._v(" 👏")]),t._v(" "),a("h3",{attrs:{id:"_3-4-安装-nvm-node-git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-安装-nvm-node-git"}},[t._v("#")]),t._v(" 3.4 安装 nvm & node & git")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下载 nvm，或者看官网的步骤 https://github.com/nvm-sh/nvm#install--update-script")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v("   ~/.bashrc    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装完毕后，更新配置文件即可使用 nvm 命令")]),t._v("\nnvm ls-remote         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看远程 node 版本")]),t._v("\nnvm "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" v12.16.3  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 选一个你要安装的版本安装，我这里选择 12.16.3")]),t._v("\nnvm list              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装完毕查看安装的 node 版本")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" -v               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看是否安装好了")]),t._v("\n\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git 安装")]),t._v("\n复制代码\n")])])]),a("h2",{attrs:{id:"_4-nginx-操作常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-nginx-操作常用命令"}},[t._v("#")]),t._v(" 4. Nginx 操作常用命令")]),t._v(" "),a("p",[t._v("Nginx 的命令在控制台中输入 "),a("code",[t._v("nginx -h")]),t._v(" 就可以看到完整的命令，这里列举几个常用的命令：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("nginx -s reload  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 向主进程发送信号，重新加载配置文件，热重启")]),t._v("\nnginx -s reopen\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启 Nginx")]),t._v("\nnginx -s stop    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 快速关闭")]),t._v("\nnginx -s quit    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 等待工作进程处理完成后关闭")]),t._v("\nnginx -T         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看当前 Nginx 最终的配置")]),t._v("\nnginx -t -c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("配置路径"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检查配置是否有问题，如果已经在配置目录，则不需要-c")]),t._v("\n复制代码\n")])])]),a("p",[a("code",[t._v("systemctl")]),t._v(" 是 Linux 系统应用管理工具 "),a("code",[t._v("systemd")]),t._v(" 的主命令，用于管理系统，我们也可以用它来对 Nginx 进行管理，相关命令如下：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("systemctl start nginx    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动 Nginx")]),t._v("\nsystemctl stop nginx     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 停止 Nginx")]),t._v("\nsystemctl restart nginx  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启 Nginx")]),t._v("\nsystemctl reload nginx   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重新加载 Nginx，用于修改配置后")]),t._v("\nsystemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" nginx   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置开机启动 Nginx")]),t._v("\nsystemctl disable nginx  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关闭开机启动 Nginx")]),t._v("\nsystemctl status nginx   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看 Nginx 运行状态")]),t._v("\n复制代码\n")])])]),a("h2",{attrs:{id:"_5-nginx-配置语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-nginx-配置语法"}},[t._v("#")]),t._v(" 5. Nginx 配置语法")]),t._v(" "),a("p",[t._v("就跟前面文件作用讲解的图所示，Nginx 的主配置文件是 "),a("code",[t._v("/etc/nginx/nginx.conf")]),t._v("，你可以使用 "),a("code",[t._v("cat -n nginx.conf")]),t._v(" 来查看配置。")]),t._v(" "),a("p",[a("code",[t._v("nginx.conf")]),t._v(" 结构图可以这样概括：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("main        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局配置，对全局生效")]),t._v("\n├── events  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置影响 Nginx 服务器或与用户的网络连接")]),t._v("\n├── http    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置代理，缓存，日志定义等绝大多数功能和第三方模块的配置")]),t._v("\n│   ├── upstream "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置后端服务器具体地址，负载均衡配置不可或缺的部分")]),t._v("\n│   ├── server   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置虚拟主机的相关参数，一个 http 块中可以有多个 server 块")]),t._v("\n│   ├── server\n│   │   ├── location  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# server 块可以包含多个 location 块，location 指令用于匹配 uri")]),t._v("\n│   │   ├── location\n│   │   └── "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n│   └── "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n└── "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),a("p",[t._v("一个 Nginx 配置文件的结构就像 "),a("code",[t._v("nginx.conf")]),t._v(" 显示的那样，配置文件的语法规则：")]),t._v(" "),a("ol",[a("li",[t._v("配置文件由指令与指令块构成；")]),t._v(" "),a("li",[t._v("每条指令以 "),a("code",[t._v(";")]),t._v(" 分号结尾，指令与参数间以空格符号分隔；")]),t._v(" "),a("li",[t._v("指令块以 "),a("code",[t._v("{}")]),t._v(" 大括号将多条指令组织在一起；")]),t._v(" "),a("li",[a("code",[t._v("include")]),t._v(" 语句允许组合多个配置文件以提升可维护性；")]),t._v(" "),a("li",[t._v("使用 "),a("code",[t._v("#")]),t._v(" 符号添加注释，提高可读性；")]),t._v(" "),a("li",[t._v("使用 "),a("code",[t._v("$")]),t._v(" 符号使用变量；")]),t._v(" "),a("li",[t._v("部分指令的参数支持正则表达式；")])]),t._v(" "),a("h3",{attrs:{id:"_5-1-典型配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-典型配置"}},[t._v("#")]),t._v(" 5.1 典型配置")]),t._v(" "),a("p",[t._v("Nginx 的典型配置：")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v("  nginx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行用户，默认即是nginx，可以不进行设置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_processes")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nginx 进程数，一般设置为和 CPU 核数一样")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_log")]),t._v("  /var/log/nginx/error.log warn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nginx 的错误日志存放目录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pid")]),t._v("        /var/run/nginx.pid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nginx 服务启动时的 pid 存放位置")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("events")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" epoll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用epoll的I/O模型(如果你不知道Nginx该使用哪种轮询方法，会自动选择一个最适合你操作系统的)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_connections")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每个进程允许最大并发数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置使用最频繁的部分，代理、缓存、日志定义等绝大多数功能和第三方模块的配置都在这里设置")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置日志模式")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("log_format")]),t._v("  main  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),t._v(" - "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_user")]),t._v(" ["),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$time_local]")]),t._v(' "'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request")]),t._v("\" '")]),t._v("\n                      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$status")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$body_bytes_sent")]),t._v(' "'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_referer")]),t._v("\" '")]),t._v("\n                      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\""),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_user_agent")]),t._v('" "'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_x_forwarded_for")]),t._v("\"'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("access_log")]),t._v("  /var/log/nginx/access.log  main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nginx访问日志存放位置")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sendfile")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启高效传输模式")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tcp_nopush")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 减少网络报文段的数量")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tcp_nodelay")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keepalive_timeout")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 保持连接的时间，也叫超时时间，单位秒")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("types_hash_max_size")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2048")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v("             /etc/nginx/mime.types")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 文件扩展名与类型映射表")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default_type")]),t._v("        application/octet-stream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认文件类型")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v(" /etc/nginx/conf.d/*.conf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 加载子配置项")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置监听的端口")]),t._v("\n    \t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v("  localhost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置的域名")]),t._v("\n    \t\n    \t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("   /usr/share/nginx/html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 网站根目录")]),t._v("\n    \t\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v("  index.html index.htm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认首页文件")]),t._v("\n    \t\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("deny")]),t._v(" 172.168.22.11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 禁止访问的ip地址，可以为all")]),t._v("\n    \t\tallow 172.168.33.44； "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 允许访问的ip地址，可以为all")]),t._v("\n    \t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \t\n    \t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_page")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v(" /50x.html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认50x对应的访问页面")]),t._v("\n    \t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_page")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),t._v(" error.html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 同上")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n复制代码\n")])])]),a("p",[t._v("server 块可以包含多个 location 块，location 指令用于匹配 uri，语法：")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" [ = | ~ | ~* | ^~] uri")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t...\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n复制代码\n")])])]),a("p",[t._v("指令后面：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("=")]),t._v(" 精确匹配路径，用于不含正则表达式的 uri 前，如果匹配成功，不再进行后续的查找；")]),t._v(" "),a("li",[a("code",[t._v("^~")]),t._v(" 用于不含正则表达式的 uri； 前，表示如果该符号后面的字符是最佳匹配，采用该规则，不再进行后续的查找；")]),t._v(" "),a("li",[a("code",[t._v("~")]),t._v(" 表示用该符号后面的正则去匹配路径，区分大小写；")]),t._v(" "),a("li",[a("code",[t._v("~*")]),t._v(" 表示用该符号后面的正则去匹配路径，不区分大小写。跟 "),a("code",[t._v("~")]),t._v(" 优先级都比较低，如有多个location的正则能匹配的话，则使用正则表达式最长的那个；")])]),t._v(" "),a("p",[t._v("如果 uri 包含正则表达式，则必须要有 "),a("code",[t._v("~")]),t._v(" 或 "),a("code",[t._v("~*")]),t._v(" 标志。")]),t._v(" "),a("h3",{attrs:{id:"_5-2-全局变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-全局变量"}},[t._v("#")]),t._v(" 5.2 全局变量")]),t._v(" "),a("p",[t._v("Nginx 有一些常用的全局变量，你可以在配置的任何位置使用它们，如下表：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("全局变量名")]),t._v(" "),a("th",[t._v("功能")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("$host")])]),t._v(" "),a("td",[t._v("请求信息中的 "),a("code",[t._v("Host")]),t._v("，如果请求中没有 "),a("code",[t._v("Host")]),t._v(" 行，则等于设置的服务器名，不包含端口")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$request_method")])]),t._v(" "),a("td",[t._v("客户端请求类型，如 "),a("code",[t._v("GET")]),t._v("、"),a("code",[t._v("POST")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$remote_addr")])]),t._v(" "),a("td",[t._v("客户端的 "),a("code",[t._v("IP")]),t._v(" 地址")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$args")])]),t._v(" "),a("td",[t._v("请求中的参数")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$arg_PARAMETER")])]),t._v(" "),a("td",[a("code",[t._v("GET")]),t._v(" 请求中变量名 PARAMETER 参数的值，例如："),a("code",[t._v("$http_user_agent")]),t._v("(Uaer-Agent 值), "),a("code",[t._v("$http_referer")]),t._v("...")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$content_length")])]),t._v(" "),a("td",[t._v("请求头中的 "),a("code",[t._v("Content-length")]),t._v(" 字段")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$http_user_agent")])]),t._v(" "),a("td",[t._v("客户端agent信息")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$http_cookie")])]),t._v(" "),a("td",[t._v("客户端cookie信息")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$remote_addr")])]),t._v(" "),a("td",[t._v("客户端的IP地址")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$remote_port")])]),t._v(" "),a("td",[t._v("客户端的端口")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$http_user_agent")])]),t._v(" "),a("td",[t._v("客户端agent信息")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$server_protocol")])]),t._v(" "),a("td",[t._v("请求使用的协议，如 "),a("code",[t._v("HTTP/1.0")]),t._v("、"),a("code",[t._v("HTTP/1.1")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$server_addr")])]),t._v(" "),a("td",[t._v("服务器地址")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$server_name")])]),t._v(" "),a("td",[t._v("服务器名称")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$server_port")])]),t._v(" "),a("td",[t._v("服务器的端口号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$scheme")])]),t._v(" "),a("td",[t._v("HTTP 方法（如http，https）")])])])]),t._v(" "),a("p",[t._v("还有更多的内置预定义变量，可以直接搜索关键字「nginx内置预定义变量」可以看到一堆博客写这个，这些变量都可以在配置文件中直接使用。")]),t._v(" "),a("h2",{attrs:{id:"_6-设置二级域名虚拟主机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-设置二级域名虚拟主机"}},[t._v("#")]),t._v(" 6. 设置二级域名虚拟主机")]),t._v(" "),a("p",[t._v("在某某云 ☁️ 上购买了域名之后，就可以配置虚拟主机了，一般配置的路径在 "),a("code",[t._v("域名管理 -> 解析 -> 添加记录")]),t._v(" 中添加二级域名，配置后某某云会把二级域名也解析到我们配置的服务器 IP 上，然后我们在 Nginx 上配置一下虚拟主机的访问监听，就可以拿到从这个二级域名过来的请求了。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/29/171c4e96a168c66a~tplv-t2oaga2asx-watermark.awebp",alt:"image-20200426150644768"}})]),t._v(" "),a("p",[t._v("现在我自己的服务器上配置了一个 fe 的二级域名，也就是说在外网访问 "),a("code",[t._v("fe.sherlocked93.club")]),t._v(" 的时候，也可以访问到我们的服务器了。")]),t._v(" "),a("p",[t._v("由于默认配置文件 "),a("code",[t._v("/etc/nginx/nginx.conf")]),t._v(" 的 http 模块中有一句 "),a("code",[t._v("include /etc/nginx/conf.d/*.conf")]),t._v(" 也就是说 "),a("code",[t._v("conf.d")]),t._v(" 文件夹下的所有 "),a("code",[t._v("*.conf")]),t._v(" 文件都会作为子配置项被引入配置文件中。为了维护方便，我在 "),a("code",[t._v("/etc/nginx/conf.d")]),t._v(" 文件夹中新建一个 "),a("code",[t._v("fe.sherlocked93.club.conf")]),t._v(" ：")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /etc/nginx/conf.d/fe.sherlocked93.club.conf")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" fe.sherlocked93.club")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("  /usr/share/nginx/html/fe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" index.html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n复制代码\n")])])]),a("p",[t._v("然后在 "),a("code",[t._v("/usr/share/nginx/html")]),t._v(" 文件夹下新建 fe 文件夹，新建文件 "),a("code",[t._v("index.html")]),t._v("，内容随便写点，改完 "),a("code",[t._v("nginx -s reload")]),t._v(" 重新加载，浏览器中输入 "),a("code",[t._v("fe.sherlocked93.club")]),t._v("，发现从二级域名就可以访问到我们刚刚新建的 fe 文件夹：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/29/171c4e96a60a5e51~tplv-t2oaga2asx-watermark.awebp",alt:"image-20200426153006505"}})]),t._v(" "),a("h2",{attrs:{id:"_7-配置反向代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-配置反向代理"}},[t._v("#")]),t._v(" 7. 配置反向代理")]),t._v(" "),a("p",[t._v("反向代理是工作中最常用的服务器功能，经常被用来解决跨域问题，下面简单介绍一下如何实现反向代理。")]),t._v(" "),a("p",[t._v("首先进入 Nginx 的主配置文件：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /etc/nginx/nginx.conf\n复制代码\n")])])]),a("p",[t._v("为了看起来方便，把行号显示出来 "),a("code",[t._v(":set nu")]),t._v(" （个人习惯），然后我们去 "),a("code",[t._v("http")]),t._v(" 模块的 "),a("code",[t._v("server")]),t._v(" 块中的 "),a("code",[t._v("location /")]),t._v("，增加一行将默认网址重定向到最大学习网站 Bilibili 的 "),a("code",[t._v("proxy_pass")]),t._v(" 配置 🤓 ：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/29/171c4e96a6d7033c~tplv-t2oaga2asx-watermark.awebp",alt:"image-20200311153131642"}})]),t._v(" "),a("p",[t._v("改完保存退出，"),a("code",[t._v("nginx -s reload")]),t._v(" 重新加载，进入默认网址，那么现在就直接跳转到 B 站了，实现了一个简单的代理。")]),t._v(" "),a("p",[t._v("实际使用中，可以将请求转发到本机另一个服务器上，也可以根据访问的路径跳转到不同端口的服务中。")]),t._v(" "),a("p",[t._v("比如我们监听 "),a("code",[t._v("9001")]),t._v(" 端口，然后把访问不同路径的请求进行反向代理：")]),t._v(" "),a("ol",[a("li",[t._v("把访问 "),a("code",[t._v("http://127.0.0.1:9001/edu")]),t._v(" 的请求转发到 "),a("code",[t._v("http://127.0.0.1:8080")])]),t._v(" "),a("li",[t._v("把访问 "),a("code",[t._v("http://127.0.0.1:9001/vod")]),t._v(" 的请求转发到 "),a("code",[t._v("http://127.0.0.1:8081")])])]),t._v(" "),a("p",[t._v("这种要怎么配置呢，首先同样打开主配置文件，然后在 http 模块下增加一个 server 块：")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9001")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" *.sherlocked93.club")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~ /edu/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" http://127.0.0.1:8080")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~ /vod/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" http://127.0.0.1:8081")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n复制代码\n")])])]),a("p",[t._v("反向代理还有一些其他的指令，可以了解一下：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("proxy_set_header")]),t._v("：在将客户端请求发送给后端服务器之前，更改来自客户端的请求头信息。")]),t._v(" "),a("li",[a("code",[t._v("proxy_connect_timeout")]),t._v("：配置Nginx与后端代理服务器尝试建立连接的超时时间。")]),t._v(" "),a("li",[a("code",[t._v("proxy_read_timeout")]),t._v("：配置Nginx向后端服务器组发出read请求后，等待相应的超时时间。")]),t._v(" "),a("li",[a("code",[t._v("proxy_send_timeout")]),t._v("：配置Nginx向后端服务器组发出write请求后，等待相应的超时时间。")]),t._v(" "),a("li",[a("code",[t._v("proxy_redirect")]),t._v("：用于修改后端服务器返回的响应头中的Location和Refresh。")])]),t._v(" "),a("h2",{attrs:{id:"_8-跨域-cors-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-跨域-cors-配置"}},[t._v("#")]),t._v(" 8. 跨域 CORS 配置")]),t._v(" "),a("p",[t._v("关于简单请求、非简单请求、跨域的概念，前面已经介绍过了，还不了解的可以看看前面的讲解。现在前后端分离的项目一统天下，经常本地起了前端服务，需要访问不同的后端地址，不可避免遇到跨域问题。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/29/171c4e96b16214cc~tplv-t2oaga2asx-watermark.awebp",alt:"image-20200427220536208"}})]),t._v(" "),a("p",[t._v("要解决跨域问题，我们来制造一个跨域问题。首先和前面设置二级域名的方式一样，先设置好 "),a("code",[t._v("fe.sherlocked93.club")]),t._v(" 和 "),a("code",[t._v("be.sherlocked93.club")]),t._v(" 二级域名，都指向本云服务器地址，虽然对应 IP 是一样的，但是在 "),a("code",[t._v("fe.sherlocked93.club")]),t._v(" 域名发出的请求访问 "),a("code",[t._v("be.sherlocked93.club")]),t._v(" 域名的请求还是跨域了，因为访问的 host 不一致（如果不知道啥原因参见前面跨域的内容）。")]),t._v(" "),a("h3",{attrs:{id:"_8-1-使用反向代理解决跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-使用反向代理解决跨域"}},[t._v("#")]),t._v(" 8.1 使用反向代理解决跨域")]),t._v(" "),a("p",[t._v("在前端服务地址为 "),a("code",[t._v("fe.sherlocked93.club")]),t._v(" 的页面请求 "),a("code",[t._v("be.sherlocked93.club")]),t._v(" 的后端服务导致的跨域，可以这样配置：")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9001")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" fe.sherlocked93.club")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" be.sherlocked93.club")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n复制代码\n")])])]),a("p",[t._v("这样就将对前一个域名 "),a("code",[t._v("fe.sherlocked93.club")]),t._v(" 的请求全都代理到了 "),a("code",[t._v("be.sherlocked93.club")]),t._v("，前端的请求都被我们用服务器代理到了后端地址下，绕过了跨域。")]),t._v(" "),a("p",[t._v("这里对静态文件的请求和后端服务的请求都以 "),a("code",[t._v("fe.sherlocked93.club")]),t._v(" 开始，不易区分，所以为了实现对后端服务请求的统一转发，通常我们会约定对后端服务的请求加上 "),a("code",[t._v("/apis/")]),t._v(" 前缀或者其他的 path 来和对静态资源的请求加以区分，此时我们可以这样配置：")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 请求跨域，约定代理后端服务请求path以/apis/开头")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ^~/apis/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里重写了请求，将正则匹配中的第一个分组的path拼接到真正的请求后面，并用break停止后续匹配")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" ^/apis/(.*)$ /"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" be.sherlocked93.club")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 两个域名之间cookie的传递与回写")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_cookie_domain")]),t._v(" be.sherlocked93.club fe.sherlocked93.club")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这样，静态资源我们使用 "),a("code",[t._v("fe.sherlocked93.club/xx.html")]),t._v("，动态资源我们使用 "),a("code",[t._v("fe.sherlocked93.club/apis/getAwo")]),t._v("，浏览器页面看起来仍然访问的前端服务器，绕过了浏览器的同源策略，毕竟我们看起来并没有跨域。")]),t._v(" "),a("p",[t._v("也可以统一一点，直接把前后端服务器地址直接都转发到另一个 "),a("code",[t._v("server.sherlocked93.club")]),t._v("，只通过在后面添加的 path 来区分请求的是静态资源还是后端服务，看需求了。")]),t._v(" "),a("h3",{attrs:{id:"_8-2-配置-header-解决跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-配置-header-解决跨域"}},[t._v("#")]),t._v(" 8.2 配置 header 解决跨域")]),t._v(" "),a("p",[t._v("当浏览器在访问跨源的服务器时，也可以在跨域的服务器上直接设置 Nginx，从而前端就可以无感地开发，不用把实际上访问后端的地址改成前端服务的地址，这样可适性更高。")]),t._v(" "),a("p",[t._v("比如前端站点是 "),a("code",[t._v("fe.sherlocked93.club")]),t._v("，这个地址下的前端页面请求 "),a("code",[t._v("be.sherlocked93.club")]),t._v(" 下的资源，比如前者的 "),a("code",[t._v("fe.sherlocked93.club/index.html")]),t._v(" 内容是这样的：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("welcome fe.sherlocked93.club!!"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("text/javascript"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xmlhttp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    xmlhttp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GET"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://be.sherlocked93.club/index.html"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    xmlhttp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n复制代码\n")])])]),a("p",[t._v("打开浏览器访问 "),a("code",[t._v("fe.sherlocked93.club/index.html")]),t._v(" 的结果如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/29/171c4e96b99b44b7~tplv-t2oaga2asx-watermark.awebp",alt:"image-20200428191153736"}})]),t._v(" "),a("p",[t._v("很明显这里是跨域请求，在浏览器中直接访问 "),a("code",[t._v("http://be.sherlocked93.club/index.html")]),t._v(" 是可以访问到的，但是在 "),a("code",[t._v("fe.sherlocked93.club")]),t._v(" 的 html 页面访问就会出现跨域。")]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("/etc/nginx/conf.d/")]),t._v(" 文件夹中新建一个配置文件，对应二级域名 "),a("code",[t._v("be.sherlocked93.club")]),t._v(" ：")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /etc/nginx/conf.d/be.sherlocked93.club.conf")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v("  be.sherlocked93.club")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_header")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Access-Control-Allow-Origin'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_origin")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局变量获得当前请求origin，带cookie的请求不支持*")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_header")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Access-Control-Allow-Credentials'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为 true 可带上 cookie")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_header")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Access-Control-Allow-Methods'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET, POST, OPTIONS'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 允许请求方法")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_header")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Access-Control-Allow-Headers'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_access_control_request_headers")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 允许请求的 header，可以为 *")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_header")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Access-Control-Expose-Headers'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Length,Content-Range'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_method")]),t._v(" = "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'OPTIONS'")]),t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_header")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Access-Control-Max-Age'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1728000")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# OPTIONS 请求的有效期，在有效期内不用发出另一条预检请求")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_header")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Type'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text/plain; charset=utf-8'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_header")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Length'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n\t\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("204")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 200 也可以")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("  /usr/share/nginx/html/be")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" index.html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n复制代码\n")])])]),a("p",[t._v("然后 "),a("code",[t._v("nginx -s reload")]),t._v(" 重新加载配置。这时再访问 "),a("code",[t._v("fe.sherlocked93.club/index.html")]),t._v(" 结果如下，请求中出现了我们刚刚配置的 Header：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/29/171c4e96c8e70d22~tplv-t2oaga2asx-watermark.awebp",alt:"image-20200428192028636"}})]),t._v(" "),a("p",[t._v("解决了跨域问题。")]),t._v(" "),a("h2",{attrs:{id:"_9-开启-gzip-压缩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-开启-gzip-压缩"}},[t._v("#")]),t._v(" 9. 开启 gzip 压缩")]),t._v(" "),a("p",[t._v("gzip 是一种常用的网页压缩技术，传输的网页经过 gzip 压缩之后大小通常可以变为原来的一半甚至更小（官网原话），更小的网页体积也就意味着带宽的节约和传输速度的提升，特别是对于访问量巨大大型网站来说，每一个静态资源体积的减小，都会带来可观的流量与带宽的节省。")]),t._v(" "),a("p",[t._v("百度可以找到很多检测站点来查看目标网页有没有开启 gzip 压缩，在下随便找了一个 "),a("a",{attrs:{href:"https://link.juejin.cn?target=http%3A%2F%2Ftool.chinaz.com%2FGzips%2FDefault.aspx%3Fq%3Djuejin.im",target:"_blank",rel:"noopener noreferrer"}},[t._v("<网页GZIP压缩检测>"),a("OutboundLink")],1),t._v(" 输入掘金 "),a("code",[t._v("juejin.im")]),t._v(" 来偷窥下掘金有没有开启 gzip。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/29/171c4e96dc471f0b~tplv-t2oaga2asx-watermark.awebp",alt:"image-20200427110415809"}})]),t._v(" "),a("p",[t._v("这里可以看到掘金是开启了 gzip 的，压缩效果还挺不错，达到了 52% 之多，本来 "),a("code",[t._v("34kb")]),t._v(" 的网页体积，压缩完只需要 "),a("code",[t._v("16kb")]),t._v("，可以想象网页传输速度提升了不少。")]),t._v(" "),a("h3",{attrs:{id:"_9-1-nginx-配置-gzip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-nginx-配置-gzip"}},[t._v("#")]),t._v(" 9.1 Nginx 配置 gzip")]),t._v(" "),a("p",[t._v("使用 gzip 不仅需要 Nginx 配置，浏览器端也需要配合，需要在请求消息头中包含 "),a("code",[t._v("Accept-Encoding: gzip")]),t._v("（IE5 之后所有的浏览器都支持了，是现代浏览器的默认设置）。一般在请求 html 和 css 等静态资源的时候，支持的浏览器在 request 请求静态资源的时候，会加上 "),a("code",[t._v("Accept-Encoding: gzip")]),t._v(" 这个 header，表示自己支持 gzip 的压缩方式，Nginx 在拿到这个请求的时候，如果有相应配置，就会返回经过 gzip 压缩过的文件给浏览器，并在 response 相应的时候加上 "),a("code",[t._v("content-encoding: gzip")]),t._v(" 来告诉浏览器自己采用的压缩方式（因为浏览器在传给服务器的时候一般还告诉服务器自己支持好几种压缩方式），浏览器拿到压缩的文件后，根据自己的解压方式进行解析。")]),t._v(" "),a("p",[t._v("先来看看 Nginx 怎么进行 gzip 配置，和之前的配置一样，为了方便管理，还是在 "),a("code",[t._v("/etc/nginx/conf.d/")]),t._v(" 文件夹中新建配置文件 "),a("code",[t._v("gzip.conf")]),t._v(" ：")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /etc/nginx/conf.d/gzip.conf")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认off，是否开启gzip")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_types")]),t._v(" text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 上面两个开启基本就能跑起了，下面的愿意折腾就了解一下")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_proxied")]),t._v(" any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_vary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_comp_level")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_buffers")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8k")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gzip_min_length 1k;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_http_version")]),t._v(" 1.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n复制代码\n")])])]),a("p",[t._v("稍微解释一下：")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("gzip_types")]),t._v("：要采用 gzip 压缩的 MIME 文件类型，其中 text/html 被系统强制启用；")]),t._v(" "),a("li",[a("strong",[t._v("gzip_static")]),t._v("：默认 off，该模块启用后，Nginx 首先检查是否存在请求静态文件的 gz 结尾的文件，如果有则直接返回该 "),a("code",[t._v(".gz")]),t._v(" 文件内容；")]),t._v(" "),a("li",[a("strong",[t._v("gzip_proxied")]),t._v("：默认 off，nginx做为反向代理时启用，用于设置启用或禁用从代理服务器上收到相应内容 gzip 压缩；")]),t._v(" "),a("li",[a("strong",[t._v("gzip_vary")]),t._v("：用于在响应消息头中添加 "),a("code",[t._v("Vary：Accept-Encoding")]),t._v("，使代理服务器根据请求头中的 "),a("code",[t._v("Accept-Encoding")]),t._v(" 识别是否启用 gzip 压缩；")]),t._v(" "),a("li",[a("strong",[t._v("gzip_comp_level")]),t._v("：gzip 压缩比，压缩级别是 1-9，1 压缩级别最低，9 最高，级别越高压缩率越大，压缩时间越长，建议 4-6；")]),t._v(" "),a("li",[a("strong",[t._v("gzip_buffers")]),t._v("：获取多少内存用于缓存压缩结果，16 8k 表示以 8k*16 为单位获得；")]),t._v(" "),a("li",[a("strong",[t._v("gzip_min_length")]),t._v("：允许压缩的页面最小字节数，页面字节数从header头中的 "),a("code",[t._v("Content-Length")]),t._v(" 中进行获取。默认值是 0，不管页面多大都压缩。建议设置成大于 1k 的字节数，小于 1k 可能会越压越大；")]),t._v(" "),a("li",[a("strong",[t._v("gzip_http_version")]),t._v("：默认 1.1，启用 gzip 所需的 HTTP 最低版本；")])]),t._v(" "),a("p",[t._v("这个配置可以插入到 http 模块整个服务器的配置里，也可以插入到需要使用的虚拟主机的 "),a("code",[t._v("server")]),t._v(" 或者下面的 "),a("code",[t._v("location")]),t._v(" 模块中，当然像上面我们这样写的话就是被 include 到 http 模块中了。")]),t._v(" "),a("p",[t._v("其他更全的配置信息可以查看 "),a("a",{attrs:{href:"https://link.juejin.cn?target=http%3A%2F%2Fnginx.org%2Fen%2Fdocs%2Fhttp%2Fngx_http_gzip_module.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("<官网文档ngx_http_gzip_module>"),a("OutboundLink")],1),t._v("，配置前是这样的：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/29/171c4e96dd2b5019~tplv-t2oaga2asx-watermark.awebp",alt:"image-20200427161022215"}})]),t._v(" "),a("p",[t._v("配置之后 response 的 header 里面多了一个 "),a("code",[t._v("Content-Encoding: gzip")]),t._v("，返回信息被压缩了：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/29/171c4e96def4db0f~tplv-t2oaga2asx-watermark.awebp",alt:"image-20200427164033577"}})]),t._v(" "),a("p",[t._v("注意了，一般 gzip 的配置建议加上 "),a("code",[t._v("gzip_min_length 1k")]),t._v("，不加的话：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/29/171c4e96ee3279e8~tplv-t2oaga2asx-watermark.awebp",alt:"image-20200427164408389"}})]),t._v(" "),a("p",[t._v("由于文件太小，gzip 压缩之后得到了 -48% 的体积优化，压缩之后体积还比压缩之前体积大了，所以最好设置低于 "),a("code",[t._v("1kb")]),t._v(" 的文件就不要 gzip 压缩了 🤪")]),t._v(" "),a("h3",{attrs:{id:"_9-2-webpack-的-gzip-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-webpack-的-gzip-配置"}},[t._v("#")]),t._v(" 9.2 Webpack 的 gzip 配置")]),t._v(" "),a("p",[t._v("当前端项目使用 Webpack 进行打包的时候，也可以开启 gzip 压缩：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vue-cli3 的 vue.config.js 文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" CompressionWebpackPlugin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'compression-webpack-plugin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// gzip 配置")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("configureWebpack")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("config")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NODE_ENV")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'production'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 生产环境")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("plugins")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CompressionWebpackPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\.js$|\\.html$|\\.css")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配文件名")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("threshold")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10240")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 文件压缩阈值，对超过10k的进行压缩")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("deleteOriginalAssets")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否删除源文件")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n复制代码\n")])])]),a("p",[t._v("由此打包出来的文件如下图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/29/171c4e96f98708c7~tplv-t2oaga2asx-watermark.awebp",alt:"image-20200427144824829"}})]),t._v(" "),a("p",[t._v("这里可以看到某些打包之后的文件下面有一个对应的 "),a("code",[t._v(".gz")]),t._v(" 经过 "),a("code",[t._v("gzip")]),t._v(" 压缩之后的文件，这是因为这个文件超过了 "),a("code",[t._v("10kb")]),t._v("，有的文件没有超过 "),a("code",[t._v("10kb")]),t._v(" 就没有进行 "),a("code",[t._v("gzip")]),t._v(" 打包，如果你期望压缩文件的体积阈值小一点，可以在 "),a("code",[t._v("compression-webpack-plugin")]),t._v(" 这个插件的配置里进行对应配置。")]),t._v(" "),a("p",[t._v("那么为啥这里 Nginx 已经有了 gzip 压缩，Webpack 这里又整了个 gzip 呢，因为如果全都是使用 Nginx 来压缩文件，会耗费服务器的计算资源，如果服务器的 "),a("code",[t._v("gzip_comp_level")]),t._v(" 配置的比较高，就更增加服务器的开销，相应增加客户端的请求时间，得不偿失。")]),t._v(" "),a("p",[t._v("如果压缩的动作在前端打包的时候就做了，把打包之后的高压缩等级文件作为静态资源放在服务器上，Nginx 会优先查找这些压缩之后的文件返回给客户端，相当于把压缩文件的动作从 Nginx 提前给 Webpack 打包的时候完成，节约了服务器资源，所以一般推介在生产环境应用 Webpack 配置 gzip 压缩。")]),t._v(" "),a("h2",{attrs:{id:"_10-配置负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-配置负载均衡"}},[t._v("#")]),t._v(" 10. 配置负载均衡")]),t._v(" "),a("p",[t._v("负载均衡在之前已经介绍了相关概念了，主要思想就是把负载均匀合理地分发到多个服务器上，实现压力分流的目的。")]),t._v(" "),a("p",[t._v("主要配置如下：")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("upstream")]),t._v(" myserver")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ip_hash;  # ip_hash 方式")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fair;   # fair 方式")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" 127.0.0.1:8081")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 负载均衡目的服务地址")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" 127.0.0.1:8080")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" 127.0.0.1:8082 weight=10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# weight 方式，不写默认为 1")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" http://myserver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_connect_timeout")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n复制代码\n")])])]),a("p",[t._v("Nginx 提供了好几种分配方式，默认为"),a("strong",[t._v("轮询")]),t._v("，就是轮流来。有以下几种分配方式：")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("轮询")]),t._v("，默认方式，每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务挂了，能自动剔除；")]),t._v(" "),a("li",[a("strong",[t._v("weight")]),t._v("，权重分配，指定轮询几率，权重越高，在被访问的概率越大，用于后端服务器性能不均的情况；")]),t._v(" "),a("li",[a("strong",[t._v("ip_hash")]),t._v("，每个请求按访问 IP 的 hash 结果分配，这样每个访客固定访问一个后端服务器，可以解决动态网页 session 共享问题。负载均衡每次请求都会重新定位到服务器集群中的某一个，那么已经登录某一个服务器的用户再重新定位到另一个服务器，其登录信息将会丢失，这样显然是不妥的；")]),t._v(" "),a("li",[a("strong",[t._v("fair")]),t._v("（第三方），按后端服务器的响应时间分配，响应时间短的优先分配，依赖第三方插件 nginx-upstream-fair，需要先安装；")])]),t._v(" "),a("h2",{attrs:{id:"_11-配置动静分离"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-配置动静分离"}},[t._v("#")]),t._v(" 11. 配置动静分离")]),t._v(" "),a("p",[t._v("动静分离在之前也介绍过了，就是把动态和静态的请求分开。方式主要有两种，一种 是纯粹把静态文件独立成单独的域名，放在独立的服务器上，也是目前主流推崇的方案。另外一种方法就是动态跟静态文件混合在一起发布， 通过 Nginx 配置来分开。")]),t._v(" "),a("p",[t._v("通过 location 指定不同的后缀名实现不同的请求转发。通过 expires 参数设置，可以使浏览器缓存过期时间，减少与服务器之前的请求和流量。具体 expires 定义：是给一个资源设定一个过期时间，也就是说无需去服务端验证，直接通过浏览器自身确认是否过期即可，所以不会产生额外的流量。此种方法非常适合不经常变动的资源。（如果经常更新的文件，不建议使用 expires 来缓存），我这里设置 3d，表示在这 3 天之内访问这个URL，发送一个请求，比对服务器该文件最后更新时间没有变化。则不会从服务器抓取，返回状态码 304，如果有修改，则直接从服务器重新下载，返回状态码 200。")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /www/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /data/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" index.html index.htm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /image/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /data/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("autoindex")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n复制代码\n")])])]),a("h2",{attrs:{id:"_12-配置高可用集群-双机热备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-配置高可用集群-双机热备"}},[t._v("#")]),t._v(" 12. 配置高可用集群（双机热备）")]),t._v(" "),a("p",[t._v("当主 Nginx 服务器宕机之后，切换到备份 Nginx 服务器")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/SHERlocked93/pic@env/uPic/2020-03-13-%E5%8F%8C%E6%9C%BA%E7%83%AD%E5%A4%87%20%281%29.png",alt:"2020-03-13-双机热备"}})]),t._v(" "),a("p",[t._v("首先安装 keepalived，")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("yum "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" keepalived -y\n复制代码\n")])])]),a("p",[t._v("然后编辑 "),a("code",[t._v("/etc/keepalived/keepalived.conf")]),t._v(" 配置文件，并在配置文件中增加 "),a("code",[t._v("vrrp_script")]),t._v(" 定义一个外围检测机制，并在 "),a("code",[t._v("vrrp_instance")]),t._v(" 中通过定义 "),a("code",[t._v("track_script")]),t._v(" 来追踪脚本执行过程，实现节点转移：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("global_defs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   notification_email "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        acassen@firewall.loc\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   notification_email_from Alexandre@firewall.loc\n   smtp_server "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v("\n   smtp_connect_timeout "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 上面都是邮件配置，没卵用")]),t._v("\n   router_id LVS_DEVEL     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前服务器名字，用hostname命令来查看")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nvrrp_script chk_maintainace "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检测机制的脚本名称为chk_maintainace")]),t._v("\n    script "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[[ -e/etc/keepalived/down ]] && exit 1 || exit 0"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以是脚本路径或脚本命令")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// script "/etc/keepalived/nginx_check.sh"    // 比如这样的脚本路径')]),t._v("\n    interval "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每隔2秒检测一次")]),t._v("\n    weight "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("-20")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当脚本执行成立，那么把当前服务器优先级改为-20")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nvrrp_instanceVI_1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每一个vrrp_instance就是定义一个虚拟路由器")]),t._v("\n    state MASTER      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 主机为MASTER，备用机为BACKUP")]),t._v("\n    interface eth0    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 网卡名字，可以从ifconfig中查找")]),t._v("\n    virtual_router_id "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("51")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 虚拟路由的id号，一般小于255，主备机id需要一样")]),t._v("\n    priority "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 优先级，master的优先级比backup的大")]),t._v("\n    advert_int "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认心跳间隔")]),t._v("\n    authentication "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 认证机制")]),t._v("\n        auth_type PASS\n        auth_pass "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1111")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 密码")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    virtual_ipaddress "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 虚拟地址vip")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.16")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.8")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n复制代码\n")])])]),a("p",[t._v("其中检测脚本 "),a("code",[t._v("nginx_check.sh")]),t._v("，这里提供一个：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -C nginx --no-header "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wc")]),t._v(" -l"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$A")]),t._v(" -eq "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    /usr/sbin/nginx "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 尝试重新启动nginx")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 睡眠2秒")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -C nginx --no-header "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wc")]),t._v(" -l"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" -eq "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("killall")]),t._v(" keepalived "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动失败，将keepalived服务杀死。将vip漂移到其它备份节点")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n复制代码\n")])])]),a("p",[t._v("复制一份到备份服务器，备份 Nginx 的配置要将 "),a("code",[t._v("state")]),t._v(" 后改为 "),a("code",[t._v("BACKUP")]),t._v("，"),a("code",[t._v("priority")]),t._v(" 改为比主机小。")]),t._v(" "),a("p",[t._v("设置完毕后各自 "),a("code",[t._v("service keepalived start")]),t._v(" 启动，经过访问成功之后，可以把 Master 机的 keepalived 停掉，此时 Master 机就不再是主机了 "),a("code",[t._v("service keepalived stop")]),t._v("，看访问虚拟 IP 时是否能够自动切换到备机 "),a("code",[t._v("ip addr")]),t._v("。")]),t._v(" "),a("p",[t._v("再次启动 Master 的 keepalived，此时 vip 又变到了主机上。")]),t._v(" "),a("h2",{attrs:{id:"_13-适配-pc-或移动设备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-适配-pc-或移动设备"}},[t._v("#")]),t._v(" 13. 适配 PC 或移动设备")]),t._v(" "),a("p",[t._v("根据用户设备不同返回不同样式的站点，以前经常使用的是纯前端的自适应布局，但无论是复杂性和易用性上面还是不如分开编写的好，比如我们常见的淘宝、京东......这些大型网站就都没有采用自适应，而是用分开制作的方式，根据用户请求的 "),a("code",[t._v("user-agent")]),t._v(" 来判断是返回 PC 还是 H5 站点。")]),t._v(" "),a("p",[t._v("首先在 "),a("code",[t._v("/usr/share/nginx/html")]),t._v(" 文件夹下 "),a("code",[t._v("mkdir")]),t._v(" 分别新建两个文件夹 "),a("code",[t._v("PC")]),t._v(" 和 "),a("code",[t._v("mobile")]),t._v("，"),a("code",[t._v("vim")]),t._v(" 编辑两个 "),a("code",[t._v("index.html")]),t._v(" 随便写点内容。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /usr/share/nginx/HTML.md\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" pc mobile\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" pc\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" index.HTML.md   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 随便写点比如 hello pc!")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/mobile\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" index.HTML.md   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 随便写点比如 hello mobile!")]),t._v("\n复制代码\n")])])]),a("p",[t._v("然后和设置二级域名虚拟主机时候一样，去 "),a("code",[t._v("/etc/nginx/conf.d")]),t._v(" 文件夹下新建一个配置文件 "),a("code",[t._v("fe.sherlocked93.club.conf")]),t._v(" ：")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /etc/nginx/conf.d/fe.sherlocked93.club.conf")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" fe.sherlocked93.club")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("  /usr/share/nginx/html/pc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_user_agent")]),t._v(" ~* "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'(Android|webOS|iPhone|iPod|BlackBerry)'")]),t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /usr/share/nginx/html/mobile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" index.html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n复制代码\n")])])]),a("p",[t._v("配置基本没什么不一样的，主要多了一个 "),a("code",[t._v("if")]),t._v(" 语句，然后使用 "),a("code",[t._v("$http_user_agent")]),t._v(" 全局变量来判断用户请求的 "),a("code",[t._v("user-agent")]),t._v("，指向不同的 root 路径，返回对应站点。")]),t._v(" "),a("p",[t._v("在浏览器访问这个站点，然后 F12 中模拟使用手机访问：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/29/171c4e97062c5124~tplv-t2oaga2asx-watermark.awebp",alt:"62haogU3DtwMRiZ"}})]),t._v(" "),a("p",[t._v("可以看到在模拟使用移动端访问的时候，Nginx 返回的站点变成了移动端对应的 html 了。")]),t._v(" "),a("h2",{attrs:{id:"_14-配置-https"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-配置-https"}},[t._v("#")]),t._v(" 14. 配置 HTTPS")]),t._v(" "),a("p",[t._v("具体配置过程网上挺多的了，也可以使用你购买的某某云，一般都会有"),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fcloud.tencent.com%2Fdocument%2Fproduct%2F400%2F6814",target:"_blank",rel:"noopener noreferrer"}},[t._v("免费申请"),a("OutboundLink")],1),t._v("的服务器证书，安装直接看所在云的操作指南即可。")]),t._v(" "),a("p",[t._v("我购买的腾讯云提供的亚洲诚信机构颁发的免费证书只能一个域名使用，二级域名什么的需要另外申请，但是申请审批比较快，一般几分钟就能成功，然后下载证书的压缩文件，里面有个 nginx 文件夹，把 "),a("code",[t._v("xxx.crt")]),t._v(" 和 "),a("code",[t._v("xxx.key")]),t._v(" 文件拷贝到服务器目录，再配置下：")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v(" ssl http2 default_server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SSL 访问端口号为 443")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" sherlocked93.club")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 填写绑定证书的域名")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ssl_certificate")]),t._v(" /etc/nginx/https/1_sherlocked93.club_bundle.crt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 证书文件地址")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ssl_certificate_key")]),t._v(" /etc/nginx/https/2_sherlocked93.club.key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 私钥文件地址")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ssl_session_timeout")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10m")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ssl_protocols")]),t._v(" TLSv1 TLSv1.1 TLSv1.2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#请按照以下协议配置")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ssl_ciphers")]),t._v(" ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ssl_prefer_server_ciphers")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("         /usr/share/nginx/html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v("        index.html index.htm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n复制代码\n")])])]),a("p",[t._v("写完 "),a("code",[t._v("nginx -t -q")]),t._v(" 校验一下，没问题就 "),a("code",[t._v("nginx -s reload")]),t._v("，现在去访问 "),a("code",[t._v("https://sherlocked93.club/")]),t._v(" 就能访问 HTTPS 版的网站了。")]),t._v(" "),a("p",[t._v("一般还可以加上几个增强安全性的命令：")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_header")]),t._v(" X-Frame-Options DENY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 减少点击劫持")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_header")]),t._v(" X-Content-Type-Options nosniff")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 禁止服务器自动解析资源类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_header")]),t._v(" X-Xss-Protection "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 防XSS攻击")]),t._v("\n复制代码\n")])])]),a("h2",{attrs:{id:"_15-一些常用技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-一些常用技巧"}},[t._v("#")]),t._v(" 15. 一些常用技巧")]),t._v(" "),a("h3",{attrs:{id:"_15-1-静态服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-1-静态服务"}},[t._v("#")]),t._v(" 15.1 静态服务")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v("  static.sherlocked93.club")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("charset")]),t._v(" utf-8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 防止中文文件名乱码")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /download")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alias")]),t._v("\t          /usr/share/nginx/html/static")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 静态资源目录")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("autoindex")]),t._v("               "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启静态资源列目录")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("autoindex_exact_size")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("off")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# on(默认)显示文件的确切大小，单位是byte；off显示文件大概大小，单位KB、MB、GB")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("autoindex_localtime")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("off")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# off(默认)时显示的文件时间为GMT时间；on显示的文件时间为服务器时间")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n复制代码\n")])])]),a("h3",{attrs:{id:"_15-2-图片防盗链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-2-图片防盗链"}},[t._v("#")]),t._v(" 15.2 图片防盗链")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        \n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v("  *.sherlocked93.club")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 图片防盗链")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~* \\.(gif|jpg|jpeg|png|bmp|swf)$")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("valid_referers")]),t._v(" none blocked server_names ~\\.google\\. ~\\.baidu\\. *.qq.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 只允许本机 IP 外链引用，感谢 @木法传 的提醒，将百度和谷歌也加入白名单")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$invalid_referer")]),t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("403")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n复制代码\n")])])]),a("h3",{attrs:{id:"_15-3-请求过滤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-3-请求过滤"}},[t._v("#")]),t._v(" 15.3 请求过滤")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 非指定请求全返回 403")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ( "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_method")]),t._v(" !~ ^(GET|POST|HEAD)$ )")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("403")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# IP访问限制（只允许IP是 192.168.0.2 机器访问）")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("allow")]),t._v(" 192.168.0.2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("deny")]),t._v(" all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("   html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v("  index.html index.htm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n复制代码\n")])])]),a("h3",{attrs:{id:"_15-4-配置图片、字体等静态文件缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-4-配置图片、字体等静态文件缓存"}},[t._v("#")]),t._v(" 15.4 配置图片、字体等静态文件缓存")]),t._v(" "),a("p",[t._v("由于图片、字体、音频、视频等静态文件在打包的时候通常会增加了 hash，所以缓存可以设置的长一点，先设置强制缓存，再设置协商缓存；如果存在没有 hash 值的静态文件，建议不设置强制缓存，仅通过协商缓存判断是否需要使用缓存。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 图片缓存时间设置")]),t._v("\nlocation ~ .*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("css"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("js"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("jpg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("png"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("gif"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("swf"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("woff"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("woff2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("eot"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("svg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ttf"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("otf"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("mp3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("m4a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("aac"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("txt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\texpires 10d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果不希望缓存")]),t._v("\nexpires -1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n复制代码\n")])])]),a("h3",{attrs:{id:"_15-5-单页面项目-history-路由配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-5-单页面项目-history-路由配置"}},[t._v("#")]),t._v(" 15.5 单页面项目 history 路由配置")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v("  fe.sherlocked93.club")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("       /usr/share/nginx/html/dist")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vue 打包后的文件夹")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v("      index.html index.htm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try_files")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$uri")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$uri")]),t._v("/ /index.html @rewrites")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    \n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("expires")]),t._v(" -1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 首页一般没有强制缓存")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_header")]),t._v(" Cache-Control no-cache")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 接口转发，如果需要的话")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#location ~ ^/api {")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  proxy_pass http://be.sherlocked93.club;")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" @rewrites")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" ^(.+)$ /index.html break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n复制代码\n")])])]),a("h3",{attrs:{id:"_15-6-http-请求转发到-https"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-6-http-请求转发到-https"}},[t._v("#")]),t._v(" 15.6 HTTP 请求转发到 HTTPS")]),t._v(" "),a("p",[t._v("配置完 HTTPS 后，浏览器还是可以访问 HTTP 的地址 "),a("code",[t._v("http://sherlocked93.club/")]),t._v(" 的，可以做一个 301 跳转，把对应域名的 HTTP 请求重定向到 HTTPS 上")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" www.sherlocked93.club")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 单域名重定向")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$host")]),t._v(" = "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'www.sherlocked93.club'")]),t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("301")]),t._v(" https://www.sherlocked93.club"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_uri")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局非 https 协议时重定向")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$scheme")]),t._v(" != "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https'")]),t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("301")]),t._v(" https://"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$server_name")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_uri")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者全部重定向")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("301")]),t._v(" https://"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$server_name")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_uri")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以上配置选择自己需要的即可，不用全部加")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n复制代码\n")])])]),a("h3",{attrs:{id:"_15-7-泛域名路径分离"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-7-泛域名路径分离"}},[t._v("#")]),t._v(" 15.7 泛域名路径分离")]),t._v(" "),a("p",[t._v("这是一个非常实用的技能，经常有时候我们可能需要配置一些二级或者三级域名，希望通过 Nginx 自动指向对应目录，比如：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("test1.doc.sherlocked93.club")]),t._v(" 自动指向 "),a("code",[t._v("/usr/share/nginx/html/doc/test1")]),t._v(" 服务器地址；")]),t._v(" "),a("li",[a("code",[t._v("test2.doc.sherlocked93.club")]),t._v(" 自动指向 "),a("code",[t._v("/usr/share/nginx/html/doc/test2")]),t._v(" 服务器地址；")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v("  ~^([\\w-]+)\\.doc\\.sherlocked93\\.club$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /usr/share/nginx/html/doc/"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n复制代码\n")])])]),a("h3",{attrs:{id:"_15-8-泛域名转发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-8-泛域名转发"}},[t._v("#")]),t._v(" 15.8 泛域名转发")]),t._v(" "),a("p",[t._v("和之前的功能类似，有时候我们希望把二级或者三级域名链接重写到我们希望的路径，让后端就可以根据路由解析不同的规则：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("test1.serv.sherlocked93.club/api?name=a")]),t._v(" 自动转发到 "),a("code",[t._v("127.0.0.1:8080/test1/api?name=a")]),t._v("；")]),t._v(" "),a("li",[a("code",[t._v("test2.serv.sherlocked93.club/api?name=a")]),t._v(" 自动转发到 "),a("code",[t._v("127.0.0.1:8080/test2/api?name=a")]),t._v(" ；")])]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" ~^([\\w-]+)\\.serv\\.sherlocked93\\.club$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v("        X-Real-IP "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v("        X-Forwarded-For "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$proxy_add_x_forwarded_for")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v("        Host "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_host")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v("        X-NginX-Proxy true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v("              http://127.0.0.1:8080/"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_uri")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n复制代码\n")])])]),a("h2",{attrs:{id:"_16-最佳实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-最佳实践"}},[t._v("#")]),t._v(" 16. 最佳实践")]),t._v(" "),a("ol",[a("li",[t._v("为了使 Nginx 配置更易于维护，建议为每个服务创建一个单独的配置文件，存储在 "),a("code",[t._v("/etc/nginx/conf.d")]),t._v(" 目录，根据需求可以创建任意多个独立的配置文件。")]),t._v(" "),a("li",[t._v("独立的配置文件，建议遵循以下命名约定 "),a("code",[t._v("<服务>.conf")]),t._v("，比如域名是 "),a("code",[t._v("sherlocked93.club")]),t._v("，那么你的配置文件的应该是这样的 "),a("code",[t._v("/etc/nginx/conf.d/sherlocked93.club.conf")]),t._v("，如果部署多个服务，也可以在文件名中加上 Nginx 转发的端口号，比如 "),a("code",[t._v("sherlocked93.club.8080.conf")]),t._v("，如果是二级域名，建议也都加上 "),a("code",[t._v("fe.sherlocked93.club.conf")]),t._v("。")]),t._v(" "),a("li",[t._v("常用的、复用频率比较高的配置可以放到 "),a("code",[t._v("/etc/nginx/snippets")]),t._v(" 文件夹，在 Nginx 的配置文件中需要用到的位置 include 进去，以功能来命名，并在每个 snippet 配置文件的开头注释标明主要功能和引入位置，方便管理。比如之前的 "),a("code",[t._v("gzip")]),t._v("、"),a("code",[t._v("cors")]),t._v(" 等常用配置，我都设置了 snippet。")]),t._v(" "),a("li",[t._v("Nginx 日志相关目录，内以 "),a("code",[t._v("域名.type.log")]),t._v(" 命名（比如 "),a("code",[t._v("be.sherlocked93.club.access.log")]),t._v(" 和 "),a("code",[t._v("be.sherlocked93.club.error.log")]),t._v(" ）位于 "),a("code",[t._v("/var/log/nginx/")]),t._v(" 目录中，为每个独立的服务配置不同的访问权限和错误日志文件，这样查找错误时，会更加方便快捷。")])]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("感谢 @木法传 的提醒，Nginx 设置防盗链的时候，可以将百度和 google 设置为白名单，利于 SEO")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("网上的帖子大多深浅不一，甚至有些前后矛盾，在下的文章都是学习过程中的总结，如果发现错误，欢迎留言指出~")]),t._v(" "),a("blockquote",[a("p",[t._v("参考文档：")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fwww.nginx.cn%2Fdoc%2F",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx中文文档"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fwww.cnblogs.com%2Fliang-io%2Fp%2F9340335.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx安装，目录结构与配置文件详解"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fblog.csdn.net%2Fxyang81%2Farticle%2Fdetails%2F52554398",target:"_blank",rel:"noopener noreferrer"}},[t._v("Keepalived安装与配置"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fblog.csdn.net%2Fxyang81%2Farticle%2Fdetails%2F52556886",target:"_blank",rel:"noopener noreferrer"}},[t._v("Keepalived+Nginx实现高可用"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6844903684967825421#comment",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx与前端开发"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://link.juejin.cn?target=http%3A%2F%2Fwww.ruanyifeng.com%2Fblog%2F2016%2F04%2Fcors.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("跨域资源共享 CORS 详解 - 阮一峰的网络日志"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://link.juejin.cn?target=http%3A%2F%2Fwww.conardli.top%2Fblog%2Farticle%2F%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96%2F%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E8%80%85%E5%BF%85%E5%A4%87%E7%9A%84nginx%E7%9F%A5%E8%AF%86.html%23nginx%E5%9C%A8%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端开发者必备的nginx知识"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fblog.csdn.net%2Fenvon123%2Farticle%2Fdetails%2F83270277",target:"_blank",rel:"noopener noreferrer"}},[t._v("我也说说Nginx解决前端跨域问题，正确的Nginx跨域配置"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fwww.holidaypenguin.com%2Fblob%2F2019-02-18-vue-router-history-mode-nginx-configuration-and-configuration-of-static-resource-cache%2F",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue-router history模式nginx配置并配置静态资源缓存 | HolidayPenguin"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fblog.xinac.cn%2Farchives%2Fnginx%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE%E5%8F%82%E8%80%83%E5%A4%A7%E5%85%A8",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx重定向，全局https，SSL配置，反代配置参考"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fxuexb.github.io%2Flearn-nginx%2F",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx 入门教程"),a("OutboundLink")],1)])])])])}),[],!1,null,null,null);s.default=n.exports}}]);